{"version":3,"file":"base.directive.d.ts","sources":["base.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AnimationOptions, BMCompleteEvent, BMCompleteLoopEvent, BMEnterFrameEvent, BMSegmentStartEvent, BMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent } from './symbols';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\nexport declare class BaseDirective implements OnDestroy {\n    private platformId;\n    private animationLoader;\n    options: AnimationOptions | null;\n    containerClass: string | null;\n    styles: Partial<CSSStyleDeclaration> | null;\n    /**\n     * `animationCreated` is dispatched after calling `loadAnimation`\n     */\n    animationCreated: EventEmitter<import(\"lottie-web\").AnimationItem>;\n    /**\n     * `complete` is dispatched after completing the last frame\n     */\n    complete: EventEmitter<BMCompleteEvent>;\n    /**\n     * `loopComplete` is dispatched after completing frame loop\n     */\n    loopComplete: EventEmitter<BMCompleteLoopEvent>;\n    /**\n     * `enterFrame` is dispatched after entering the new frame\n     */\n    enterFrame: EventEmitter<BMEnterFrameEvent>;\n    /**\n     * `segmentStart` is dispatched when the new segment is adjusted\n     */\n    segmentStart: EventEmitter<BMSegmentStartEvent>;\n    /**\n     * Original event name is `config_ready`. `config_ready` is dispatched\n     * after the needed renderer is configured\n     */\n    configReady: EventEmitter<void>;\n    /**\n     * Original event name is `data_ready`. `data_ready` is dispatched\n     * when all parts of the animation have been loaded\n     */\n    dataReady: EventEmitter<void>;\n    /**\n     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n     * when elements have been added to the DOM\n     */\n    domLoaded: EventEmitter<void>;\n    /**\n     * `destroy` will be dispatched in the `ngOnDestroy` hook of the service,\n     * it's useful for releasing resources\n     */\n    destroy: EventEmitter<BMDestroyEvent>;\n    /**\n     * `error` will be dispatched if the lottie player could not render\n     * some frame or parse config\n     */\n    error: EventEmitter<BMRenderFrameErrorEvent | BMConfigErrorEvent>;\n    private destroy$;\n    constructor(platformId: string, animationLoader: AnimationLoader);\n    ngOnDestroy(): void;\n    protected loadAnimation(changes: SimpleChanges, container: HTMLElement, eventsFacade: LottieEventsFacade, instance: BaseDirective): void;\n}\n"]}