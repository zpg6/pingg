import { EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';
import { AnimationOptions, BMCompleteEvent, BMCompleteLoopEvent, BMEnterFrameEvent, BMSegmentStartEvent, BMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent } from './symbols';
import { AnimationLoader } from './animation-loader';
import { LottieEventsFacade } from './events-facade';
export declare class BaseDirective implements OnDestroy {
    private platformId;
    private animationLoader;
    options: AnimationOptions | null;
    containerClass: string | null;
    styles: Partial<CSSStyleDeclaration> | null;
    /**
     * `animationCreated` is dispatched after calling `loadAnimation`
     */
    animationCreated: EventEmitter<import("lottie-web").AnimationItem>;
    /**
     * `complete` is dispatched after completing the last frame
     */
    complete: EventEmitter<BMCompleteEvent>;
    /**
     * `loopComplete` is dispatched after completing frame loop
     */
    loopComplete: EventEmitter<BMCompleteLoopEvent>;
    /**
     * `enterFrame` is dispatched after entering the new frame
     */
    enterFrame: EventEmitter<BMEnterFrameEvent>;
    /**
     * `segmentStart` is dispatched when the new segment is adjusted
     */
    segmentStart: EventEmitter<BMSegmentStartEvent>;
    /**
     * Original event name is `config_ready`. `config_ready` is dispatched
     * after the needed renderer is configured
     */
    configReady: EventEmitter<void>;
    /**
     * Original event name is `data_ready`. `data_ready` is dispatched
     * when all parts of the animation have been loaded
     */
    dataReady: EventEmitter<void>;
    /**
     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched
     * when elements have been added to the DOM
     */
    domLoaded: EventEmitter<void>;
    /**
     * `destroy` will be dispatched in the `ngOnDestroy` hook of the service,
     * it's useful for releasing resources
     */
    destroy: EventEmitter<BMDestroyEvent>;
    /**
     * `error` will be dispatched if the lottie player could not render
     * some frame or parse config
     */
    error: EventEmitter<BMRenderFrameErrorEvent | BMConfigErrorEvent>;
    private destroy$;
    constructor(platformId: string, animationLoader: AnimationLoader);
    ngOnDestroy(): void;
    protected loadAnimation(changes: SimpleChanges, container: HTMLElement, eventsFacade: LottieEventsFacade, instance: BaseDirective): void;
}
