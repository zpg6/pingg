{"version":3,"file":"ngx-lottie.js","sources":["../../src/src/symbols.ts","../../src/src/utils.ts","../../src/src/animation-loader.ts","../../src/src/base.directive.ts","../../src/src/animation-cache.ts","../../src/src/events-facade.ts","../../src/src/lottie.directive.ts","../../src/src/lottie.component.ts","../../src/src/lottie.module.ts","../../src/src/transfer-state.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { AnimationCache } from './animation-cache';\n\nexport interface BMEnterFrameEvent {\n  currentTime: number;\n  duration: number;\n  totalTime: number;\n  type: 'enterFrame';\n}\n\nexport interface BMCompleteLoopEvent {\n  type: 'loopComplete';\n  loop: number;\n  playCount: number;\n  frameMult: number;\n}\n\nexport interface BMCompleteEvent {\n  type: 'complete';\n  duration: number;\n}\n\nexport interface BMSegmentStartEvent {\n  type: 'segmentStart';\n  firstFrame: number;\n  totalFrames: number;\n}\n\nexport interface BMDestroyEvent {\n  target: AnimationItem;\n  type: 'destroy';\n}\n\nexport interface BMRenderFrameErrorEvent {\n  type: 'renderFrameError';\n  nativeError: Error;\n  currentTime: number;\n}\n\nexport interface BMConfigErrorEvent {\n  type: 'configError';\n  nativeError: Error;\n}\n\nexport type LottieEvent =\n  | BMEnterFrameEvent\n  | BMCompleteLoopEvent\n  | BMCompleteEvent\n  | BMSegmentStartEvent\n  | BMDestroyEvent\n  | BMRenderFrameErrorEvent\n  | BMConfigErrorEvent\n  | void;\n\nexport type CamelizedAnimationEventName =\n  | 'complete'\n  | 'loopComplete'\n  | 'enterFrame'\n  | 'segmentStart'\n  | 'configReady'\n  | 'dataReady'\n  | 'domLoaded'\n  | 'destroy'\n  | 'error';\n\nexport type EventsMap = { [key in CamelizedAnimationEventName]: AnimationEventName };\n\nexport type AnimationFilename = string;\nexport type AnimationEventName = import('lottie-web').AnimationEventName;\nexport type AnimationItem = import('lottie-web').AnimationItem;\nexport type LottiePlayer = typeof import('lottie-web').default;\n\n/**\n * @example\n * import player from 'lottie-web';\n * const factory = () => player;\n */\ntype LottiePlayerFactory = () => LottiePlayer;\n\n/**\n * @example\n * const factory = () => import('lottie-web');\n */\ntype LottieLoader = () => Promise<typeof import('lottie-web')>;\n\nexport type LottiePlayerFactoryOrLoader = LottiePlayerFactory | LottieLoader;\n\nexport interface LottieOptions {\n  player: LottiePlayerFactoryOrLoader;\n  useCache?: boolean;\n}\n\nexport type AnimationConfigWithData = import('lottie-web').AnimationConfigWithData;\nexport type AnimationConfigWithPath = import('lottie-web').AnimationConfigWithPath;\n\nexport type AnimationOptions = Partial<AnimationConfigWithData> | Partial<AnimationConfigWithPath>;\n\nexport const LOTTIE_OPTIONS = new InjectionToken<LottieOptions>('LottieOptions');\nexport const ANIMATION_CACHE = new InjectionToken<AnimationCache | null>('AnimationCache');\n","import { from, of, Observable } from 'rxjs';\nimport { map, publishReplay, refCount } from 'rxjs/operators';\n\nimport {\n  LottiePlayer,\n  AnimationOptions,\n  AnimationFilename,\n  AnimationConfigWithData,\n  AnimationConfigWithPath,\n  AnimationItem,\n  LottiePlayerFactoryOrLoader,\n} from './symbols';\nimport { AnimationCache } from './animation-cache';\n\nexport function transformAnimationFilenameToKey(animation: AnimationFilename): string {\n  return `animation-${animation.split('.json')[0]}`;\n}\n\nexport function mergeOptionsWithDefault(\n  options: AnimationOptions | null,\n  container: HTMLElement,\n  animationCache: AnimationCache | null,\n): AnimationConfigWithData | AnimationConfigWithPath {\n  const merged: AnimationConfigWithData | AnimationConfigWithPath = Object.assign(\n    {\n      container,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n    },\n    options,\n  );\n\n  return animationCache !== null ? animationCache.transformOptions(merged) : merged;\n}\n\nexport function awaitConfigAndCache(\n  animationCache: AnimationCache | null,\n  options: AnimationOptions,\n  animationItem: AnimationItem,\n): void {\n  if (animationCache === null) {\n    return;\n  }\n\n  animationItem.addEventListener('config_ready', () => {\n    animationCache.set(options, animationItem);\n  });\n}\n\nexport function streamifyPlayerOrLoader(\n  player: LottiePlayerFactoryOrLoader,\n): Observable<LottiePlayer> {\n  const playerOrLoader = player();\n\n  if (playerOrLoader instanceof Promise) {\n    return from(playerOrLoader).pipe(\n      map(module => module.default || module),\n      publishReplay(1),\n      refCount(),\n    );\n  } else {\n    return of(playerOrLoader);\n  }\n}\n","import { Injectable, NgZone, Inject, EventEmitter, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  LottiePlayer,\n  LottieOptions,\n  AnimationItem,\n  AnimationOptions,\n  AnimationConfigWithData,\n  AnimationConfigWithPath,\n  LOTTIE_OPTIONS,\n  ANIMATION_CACHE,\n} from './symbols';\nimport { awaitConfigAndCache, mergeOptionsWithDefault, streamifyPlayerOrLoader } from './utils';\nimport { BaseDirective } from './base.directive';\nimport { AnimationCache } from './animation-cache';\nimport { LottieEventsFacade } from './events-facade';\n\n@Injectable()\nexport class AnimationLoader {\n  private player$ = streamifyPlayerOrLoader(this.options.player);\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(LOTTIE_OPTIONS) private options: LottieOptions,\n    @Inject(ANIMATION_CACHE) private animationCache: AnimationCache | null,\n  ) {}\n\n  resolveLoaderAndLoadAnimation(\n    options: AnimationOptions | null,\n    container: HTMLElement,\n    eventsFacade: LottieEventsFacade,\n    animationCreated: EventEmitter<AnimationItem>,\n    instance: BaseDirective,\n    destroy$: Subject<void>,\n  ): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.player$.pipe(takeUntil(destroy$)).subscribe(player => {\n      const mergedOptions = mergeOptionsWithDefault(options, container, this.animationCache);\n      this.loadAnimation(player, mergedOptions, eventsFacade, animationCreated, instance);\n    });\n  }\n\n  private loadAnimation(\n    player: LottiePlayer,\n    options: AnimationOptions,\n    eventsFacade: LottieEventsFacade,\n    animationCreated: EventEmitter<AnimationItem>,\n    instance: BaseDirective,\n  ): void {\n    const animationItem = this.ngZone.runOutsideAngular(() =>\n      player.loadAnimation(options as AnimationConfigWithData | AnimationConfigWithPath),\n    );\n    awaitConfigAndCache(this.animationCache, options, animationItem);\n    // Dispatch `animationCreated` event after animation is loaded successfully\n    animationCreated.emit(animationItem);\n    eventsFacade.addEventListeners(instance, animationItem);\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Subject } from 'rxjs';\n\nimport {\n  AnimationOptions,\n  BMCompleteEvent,\n  BMCompleteLoopEvent,\n  BMEnterFrameEvent,\n  BMSegmentStartEvent,\n  BMDestroyEvent,\n  BMRenderFrameErrorEvent,\n  BMConfigErrorEvent,\n  AnimationItem,\n} from './symbols';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\n\n@Directive({ selector: '[lottie]' })\nexport class BaseDirective implements OnDestroy {\n  @Input() options: AnimationOptions | null = null;\n\n  @Input() containerClass: string | null = null;\n\n  @Input() styles: Partial<CSSStyleDeclaration> | null = null;\n\n  /**\n   * `animationCreated` is dispatched after calling `loadAnimation`\n   */\n  @Output() animationCreated = new EventEmitter<AnimationItem>();\n\n  /**\n   * `complete` is dispatched after completing the last frame\n   */\n  @Output() complete = new EventEmitter<BMCompleteEvent>();\n\n  /**\n   * `loopComplete` is dispatched after completing frame loop\n   */\n  @Output() loopComplete = new EventEmitter<BMCompleteLoopEvent>();\n\n  /**\n   * `enterFrame` is dispatched after entering the new frame\n   */\n  @Output() enterFrame = new EventEmitter<BMEnterFrameEvent>();\n\n  /**\n   * `segmentStart` is dispatched when the new segment is adjusted\n   */\n  @Output() segmentStart = new EventEmitter<BMSegmentStartEvent>();\n\n  /**\n   * Original event name is `config_ready`. `config_ready` is dispatched\n   * after the needed renderer is configured\n   */\n  @Output() configReady = new EventEmitter<void>();\n\n  /**\n   * Original event name is `data_ready`. `data_ready` is dispatched\n   * when all parts of the animation have been loaded\n   */\n  @Output() dataReady = new EventEmitter<void>();\n\n  /**\n   * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n   * when elements have been added to the DOM\n   */\n  @Output() domLoaded = new EventEmitter<void>();\n\n  /**\n   * `destroy` will be dispatched in the `ngOnDestroy` hook of the service,\n   * it's useful for releasing resources\n   */\n  @Output() destroy = new EventEmitter<BMDestroyEvent>();\n\n  /**\n   * `error` will be dispatched if the lottie player could not render\n   * some frame or parse config\n   */\n  @Output() error = new EventEmitter<BMRenderFrameErrorEvent | BMConfigErrorEvent>();\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string,\n    private animationLoader: AnimationLoader,\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected loadAnimation(\n    changes: SimpleChanges,\n    container: HTMLElement,\n    eventsFacade: LottieEventsFacade,\n    instance: BaseDirective,\n  ): void {\n    if (isPlatformServer(this.platformId) || !changes.options) {\n      return;\n    }\n\n    eventsFacade.destroyAnimation();\n\n    this.animationLoader.resolveLoaderAndLoadAnimation(\n      changes.options.currentValue,\n      container,\n      eventsFacade,\n      this.animationCreated,\n      instance,\n      this.destroy$,\n    );\n  }\n}\n","import {\n  LottieOptions,\n  AnimationItem,\n  AnimationConfigWithData,\n  AnimationConfigWithPath,\n  AnimationOptions,\n} from './symbols';\n\nexport class AnimationCache {\n  private cache = new Map<string, unknown>();\n\n  static create(options: LottieOptions): AnimationCache | null {\n    return options.useCache ? new AnimationCache() : null;\n  }\n\n  transformOptions(\n    options: AnimationConfigWithData | AnimationConfigWithPath,\n  ): AnimationConfigWithData | AnimationConfigWithPath {\n    const path = (options as AnimationConfigWithPath).path;\n    if (path && this.cache.has(path)) {\n      delete (options as AnimationConfigWithPath).path;\n      (options as AnimationConfigWithData).animationData = this.cache.get(path);\n    }\n    return options;\n  }\n\n  set(options: AnimationOptions, animationItem: AnimationItem): void {\n    const animationData = (options as AnimationConfigWithData).animationData;\n    if (animationData) {\n      return;\n    }\n\n    this.cache.set((options as AnimationConfigWithPath).path!, animationItem['animationData']);\n  }\n}\n","import { OnDestroy, Injectable, NgZone, Inject, EventEmitter, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { BaseDirective } from './base.directive';\nimport { EventsMap, LottieEvent, AnimationItem } from './symbols';\n\n/**\n * Returns only those `EventEmitter` instances that has attached observers\n */\nfunction getObservedEventEmitters(instance: BaseDirective, eventsMap: EventsMap) {\n  return (\n    Object.keys(instance)\n      // `Object.entries` is not supported in IE11.\n      .map(key => [key, instance[key]])\n      .filter(\n        ([key, property]) =>\n          property instanceof EventEmitter &&\n          property.observers.length > 0 &&\n          eventsMap.hasOwnProperty(key),\n      )\n      .map(([key, eventEmitter]) => ({\n        eventEmitter,\n        name: eventsMap[key],\n      }))\n  );\n}\n\n@Injectable()\nexport class LottieEventsFacade implements OnDestroy {\n  /**\n   * @see https://github.com/airbnb/lottie-web#events\n   */\n  private eventsMap: EventsMap = {\n    complete: 'complete',\n    loopComplete: 'loopComplete',\n    enterFrame: 'enterFrame',\n    segmentStart: 'segmentStart',\n    configReady: 'config_ready',\n    dataReady: 'data_ready',\n    domLoaded: 'DOMLoaded',\n    destroy: 'destroy',\n    error: 'error',\n  };\n\n  private animationItem: AnimationItem | null = null;\n\n  constructor(private ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: string) {}\n\n  ngOnDestroy(): void {\n    this.destroyAnimation();\n  }\n\n  addEventListeners(instance: BaseDirective, animationItem: AnimationItem): void {\n    this.animationItem = animationItem;\n    // `AnimationItem` triggers different events every ms, we have to listen\n    // them outside Angular's context, thus it won't affect performance\n    this.ngZone.runOutsideAngular(() => this.addEventListenersToObservedEventEmitters(instance));\n  }\n\n  destroyAnimation(): void {\n    // The `ng-lottie` component or the `lottie` directive can be destroyed\n    // before the `animationItem` is set, thus it will fail with\n    // `Cannot read property 'destroy' of null`.\n    // Potentially it can happen if the directive gets destroyed before change\n    // detection is run.\n    if (isPlatformServer(this.platformId) || this.animationItem === null) {\n      return;\n    }\n\n    // `destroy()` will remove all events listeners\n    this.animationItem.destroy();\n    this.animationItem = null;\n  }\n\n  private addEventListenersToObservedEventEmitters(instance: BaseDirective): void {\n    const observedEmitters = getObservedEventEmitters(instance, this.eventsMap);\n\n    for (const { name, eventEmitter } of observedEmitters) {\n      this.animationItem!.addEventListener(name, (event: LottieEvent) => {\n        eventEmitter.emit(event);\n      });\n    }\n  }\n}\n","import {\n  Directive,\n  Inject,\n  Self,\n  ElementRef,\n  PLATFORM_ID,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { BaseDirective } from './base.directive';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\n\n@Directive({\n  selector: '[lottie]',\n  providers: [LottieEventsFacade],\n})\nexport class LottieDirective extends BaseDirective implements OnChanges {\n  constructor(\n    @Inject(PLATFORM_ID) platformId: string,\n    @Self() private host: ElementRef<HTMLElement>,\n    @Self() private eventsFacade: LottieEventsFacade,\n    animationLoader: AnimationLoader,\n  ) {\n    super(platformId, animationLoader);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.loadAnimation(changes, this.host.nativeElement, this.eventsFacade, this);\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Inject,\n  ElementRef,\n  ViewChild,\n  Self,\n  PLATFORM_ID,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { BaseDirective } from './base.directive';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieEventsFacade } from './events-facade';\n\n@Component({\n  selector: 'ng-lottie',\n  template: `\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [LottieEventsFacade],\n})\nexport class LottieComponent extends BaseDirective implements OnChanges {\n  @Input() width: string | null = null;\n  @Input() height: string | null = null;\n\n  @ViewChild('container', { static: true }) container: ElementRef<HTMLElement> = null!;\n\n  constructor(\n    @Inject(PLATFORM_ID) platformId: string,\n    @Self() private eventsFacade: LottieEventsFacade,\n    animationLoader: AnimationLoader,\n  ) {\n    super(platformId, animationLoader);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    super.loadAnimation(changes, this.container.nativeElement, this.eventsFacade, this);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BaseDirective } from './base.directive';\nimport { AnimationCache } from './animation-cache';\nimport { AnimationLoader } from './animation-loader';\nimport { LottieDirective } from './lottie.directive';\nimport { LottieComponent } from './lottie.component';\nimport { LottieOptions, LOTTIE_OPTIONS, ANIMATION_CACHE } from './symbols';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BaseDirective, LottieDirective, LottieComponent],\n  exports: [BaseDirective, LottieDirective, LottieComponent],\n})\nexport class LottieModule {\n  static forRoot(options: LottieOptions): ModuleWithProviders<LottieModule> {\n    return {\n      ngModule: LottieModule,\n      providers: [\n        AnimationLoader,\n        {\n          provide: LOTTIE_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: ANIMATION_CACHE,\n          useFactory: AnimationCache.create,\n          deps: [LOTTIE_OPTIONS],\n        },\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nimport { AnimationFilename } from './symbols';\nimport { transformAnimationFilenameToKey } from './utils';\n\n@Injectable({ providedIn: 'root' })\nexport class LottieTransferState {\n  constructor(private transferState: TransferState) {}\n\n  get<T>(animation: AnimationFilename): T | null {\n    const animationKey = transformAnimationFilenameToKey(animation);\n    const stateKey = makeStateKey<T>(animationKey);\n    return this.transferState.get(stateKey, null);\n  }\n}\n"]}