/**
 * @fileoverview added by tsickle
 * Generated from: src/symbols.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/**
 * @record
 */
export function BMEnterFrameEvent() { }
if (false) {
    /** @type {?} */
    BMEnterFrameEvent.prototype.currentTime;
    /** @type {?} */
    BMEnterFrameEvent.prototype.duration;
    /** @type {?} */
    BMEnterFrameEvent.prototype.totalTime;
    /** @type {?} */
    BMEnterFrameEvent.prototype.type;
}
/**
 * @record
 */
export function BMCompleteLoopEvent() { }
if (false) {
    /** @type {?} */
    BMCompleteLoopEvent.prototype.type;
    /** @type {?} */
    BMCompleteLoopEvent.prototype.loop;
    /** @type {?} */
    BMCompleteLoopEvent.prototype.playCount;
    /** @type {?} */
    BMCompleteLoopEvent.prototype.frameMult;
}
/**
 * @record
 */
export function BMCompleteEvent() { }
if (false) {
    /** @type {?} */
    BMCompleteEvent.prototype.type;
    /** @type {?} */
    BMCompleteEvent.prototype.duration;
}
/**
 * @record
 */
export function BMSegmentStartEvent() { }
if (false) {
    /** @type {?} */
    BMSegmentStartEvent.prototype.type;
    /** @type {?} */
    BMSegmentStartEvent.prototype.firstFrame;
    /** @type {?} */
    BMSegmentStartEvent.prototype.totalFrames;
}
/**
 * @record
 */
export function BMDestroyEvent() { }
if (false) {
    /** @type {?} */
    BMDestroyEvent.prototype.target;
    /** @type {?} */
    BMDestroyEvent.prototype.type;
}
/**
 * @record
 */
export function BMRenderFrameErrorEvent() { }
if (false) {
    /** @type {?} */
    BMRenderFrameErrorEvent.prototype.type;
    /** @type {?} */
    BMRenderFrameErrorEvent.prototype.nativeError;
    /** @type {?} */
    BMRenderFrameErrorEvent.prototype.currentTime;
}
/**
 * @record
 */
export function BMConfigErrorEvent() { }
if (false) {
    /** @type {?} */
    BMConfigErrorEvent.prototype.type;
    /** @type {?} */
    BMConfigErrorEvent.prototype.nativeError;
}
/**
 * @record
 */
export function LottieOptions() { }
if (false) {
    /** @type {?} */
    LottieOptions.prototype.player;
    /** @type {?|undefined} */
    LottieOptions.prototype.useCache;
}
/** @type {?} */
export const LOTTIE_OPTIONS = new InjectionToken('LottieOptions');
/** @type {?} */
export const ANIMATION_CACHE = new InjectionToken('AnimationCache');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ltYm9scy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcmMvc3ltYm9scy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFJL0MsdUNBS0M7OztJQUpDLHdDQUFvQjs7SUFDcEIscUNBQWlCOztJQUNqQixzQ0FBa0I7O0lBQ2xCLGlDQUFtQjs7Ozs7QUFHckIseUNBS0M7OztJQUpDLG1DQUFxQjs7SUFDckIsbUNBQWE7O0lBQ2Isd0NBQWtCOztJQUNsQix3Q0FBa0I7Ozs7O0FBR3BCLHFDQUdDOzs7SUFGQywrQkFBaUI7O0lBQ2pCLG1DQUFpQjs7Ozs7QUFHbkIseUNBSUM7OztJQUhDLG1DQUFxQjs7SUFDckIseUNBQW1COztJQUNuQiwwQ0FBb0I7Ozs7O0FBR3RCLG9DQUdDOzs7SUFGQyxnQ0FBc0I7O0lBQ3RCLDhCQUFnQjs7Ozs7QUFHbEIsNkNBSUM7OztJQUhDLHVDQUF5Qjs7SUFDekIsOENBQW1COztJQUNuQiw4Q0FBb0I7Ozs7O0FBR3RCLHdDQUdDOzs7SUFGQyxrQ0FBb0I7O0lBQ3BCLHlDQUFtQjs7Ozs7QUE4Q3JCLG1DQUdDOzs7SUFGQywrQkFBb0M7O0lBQ3BDLGlDQUFtQjs7O0FBUXJCLE1BQU0sT0FBTyxjQUFjLEdBQUcsSUFBSSxjQUFjLENBQWdCLGVBQWUsQ0FBQzs7QUFDaEYsTUFBTSxPQUFPLGVBQWUsR0FBRyxJQUFJLGNBQWMsQ0FBd0IsZ0JBQWdCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBBbmltYXRpb25DYWNoZSB9IGZyb20gJy4vYW5pbWF0aW9uLWNhY2hlJztcblxuZXhwb3J0IGludGVyZmFjZSBCTUVudGVyRnJhbWVFdmVudCB7XG4gIGN1cnJlbnRUaW1lOiBudW1iZXI7XG4gIGR1cmF0aW9uOiBudW1iZXI7XG4gIHRvdGFsVGltZTogbnVtYmVyO1xuICB0eXBlOiAnZW50ZXJGcmFtZSc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQk1Db21wbGV0ZUxvb3BFdmVudCB7XG4gIHR5cGU6ICdsb29wQ29tcGxldGUnO1xuICBsb29wOiBudW1iZXI7XG4gIHBsYXlDb3VudDogbnVtYmVyO1xuICBmcmFtZU11bHQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCTUNvbXBsZXRlRXZlbnQge1xuICB0eXBlOiAnY29tcGxldGUnO1xuICBkdXJhdGlvbjogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJNU2VnbWVudFN0YXJ0RXZlbnQge1xuICB0eXBlOiAnc2VnbWVudFN0YXJ0JztcbiAgZmlyc3RGcmFtZTogbnVtYmVyO1xuICB0b3RhbEZyYW1lczogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJNRGVzdHJveUV2ZW50IHtcbiAgdGFyZ2V0OiBBbmltYXRpb25JdGVtO1xuICB0eXBlOiAnZGVzdHJveSc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQk1SZW5kZXJGcmFtZUVycm9yRXZlbnQge1xuICB0eXBlOiAncmVuZGVyRnJhbWVFcnJvcic7XG4gIG5hdGl2ZUVycm9yOiBFcnJvcjtcbiAgY3VycmVudFRpbWU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCTUNvbmZpZ0Vycm9yRXZlbnQge1xuICB0eXBlOiAnY29uZmlnRXJyb3InO1xuICBuYXRpdmVFcnJvcjogRXJyb3I7XG59XG5cbmV4cG9ydCB0eXBlIExvdHRpZUV2ZW50ID1cbiAgfCBCTUVudGVyRnJhbWVFdmVudFxuICB8IEJNQ29tcGxldGVMb29wRXZlbnRcbiAgfCBCTUNvbXBsZXRlRXZlbnRcbiAgfCBCTVNlZ21lbnRTdGFydEV2ZW50XG4gIHwgQk1EZXN0cm95RXZlbnRcbiAgfCBCTVJlbmRlckZyYW1lRXJyb3JFdmVudFxuICB8IEJNQ29uZmlnRXJyb3JFdmVudFxuICB8IHZvaWQ7XG5cbmV4cG9ydCB0eXBlIENhbWVsaXplZEFuaW1hdGlvbkV2ZW50TmFtZSA9XG4gIHwgJ2NvbXBsZXRlJ1xuICB8ICdsb29wQ29tcGxldGUnXG4gIHwgJ2VudGVyRnJhbWUnXG4gIHwgJ3NlZ21lbnRTdGFydCdcbiAgfCAnY29uZmlnUmVhZHknXG4gIHwgJ2RhdGFSZWFkeSdcbiAgfCAnZG9tTG9hZGVkJ1xuICB8ICdkZXN0cm95J1xuICB8ICdlcnJvcic7XG5cbmV4cG9ydCB0eXBlIEV2ZW50c01hcCA9IHsgW2tleSBpbiBDYW1lbGl6ZWRBbmltYXRpb25FdmVudE5hbWVdOiBBbmltYXRpb25FdmVudE5hbWUgfTtcblxuZXhwb3J0IHR5cGUgQW5pbWF0aW9uRmlsZW5hbWUgPSBzdHJpbmc7XG5leHBvcnQgdHlwZSBBbmltYXRpb25FdmVudE5hbWUgPSBpbXBvcnQoJ2xvdHRpZS13ZWInKS5BbmltYXRpb25FdmVudE5hbWU7XG5leHBvcnQgdHlwZSBBbmltYXRpb25JdGVtID0gaW1wb3J0KCdsb3R0aWUtd2ViJykuQW5pbWF0aW9uSXRlbTtcbmV4cG9ydCB0eXBlIExvdHRpZVBsYXllciA9IHR5cGVvZiBpbXBvcnQoJ2xvdHRpZS13ZWInKS5kZWZhdWx0O1xuXG4vKipcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgcGxheWVyIGZyb20gJ2xvdHRpZS13ZWInO1xuICogY29uc3QgZmFjdG9yeSA9ICgpID0+IHBsYXllcjtcbiAqL1xudHlwZSBMb3R0aWVQbGF5ZXJGYWN0b3J5ID0gKCkgPT4gTG90dGllUGxheWVyO1xuXG4vKipcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBmYWN0b3J5ID0gKCkgPT4gaW1wb3J0KCdsb3R0aWUtd2ViJyk7XG4gKi9cbnR5cGUgTG90dGllTG9hZGVyID0gKCkgPT4gUHJvbWlzZTx0eXBlb2YgaW1wb3J0KCdsb3R0aWUtd2ViJyk+O1xuXG5leHBvcnQgdHlwZSBMb3R0aWVQbGF5ZXJGYWN0b3J5T3JMb2FkZXIgPSBMb3R0aWVQbGF5ZXJGYWN0b3J5IHwgTG90dGllTG9hZGVyO1xuXG5leHBvcnQgaW50ZXJmYWNlIExvdHRpZU9wdGlvbnMge1xuICBwbGF5ZXI6IExvdHRpZVBsYXllckZhY3RvcnlPckxvYWRlcjtcbiAgdXNlQ2FjaGU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBBbmltYXRpb25Db25maWdXaXRoRGF0YSA9IGltcG9ydCgnbG90dGllLXdlYicpLkFuaW1hdGlvbkNvbmZpZ1dpdGhEYXRhO1xuZXhwb3J0IHR5cGUgQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGggPSBpbXBvcnQoJ2xvdHRpZS13ZWInKS5BbmltYXRpb25Db25maWdXaXRoUGF0aDtcblxuZXhwb3J0IHR5cGUgQW5pbWF0aW9uT3B0aW9ucyA9IFBhcnRpYWw8QW5pbWF0aW9uQ29uZmlnV2l0aERhdGE+IHwgUGFydGlhbDxBbmltYXRpb25Db25maWdXaXRoUGF0aD47XG5cbmV4cG9ydCBjb25zdCBMT1RUSUVfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxMb3R0aWVPcHRpb25zPignTG90dGllT3B0aW9ucycpO1xuZXhwb3J0IGNvbnN0IEFOSU1BVElPTl9DQUNIRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxBbmltYXRpb25DYWNoZSB8IG51bGw+KCdBbmltYXRpb25DYWNoZScpO1xuIl19