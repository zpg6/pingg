{"version":3,"file":"angular-fire-performance.js","sources":["../../../src/performance/performance.ts","../../../src/performance/performance.service.ts","../../../src/performance/performance.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp, ɵlazySDKProxy, ɵPromiseProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<performance.Performance> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n\n  private readonly performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled: boolean | null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled: boolean | null,\n    private zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : EMPTY),\n      map(() => zone.runOutsideAngular(() => app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled !== true) {\n          performance.instrumentationEnabled = false;\n        }\n        if (dataCollectionEnabled !== true) {\n          performance.dataCollectionEnabled = false;\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId: string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return {\n        unsubscribe: () => {\n          window.performance.mark(endMarkName);\n          window.performance.measure(traceId, startMarkName, endMarkName);\n        }\n      };\n    });\n  } else {\n    return EMPTY;\n  }\n};\n\nexport const traceUntil = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a => test(a) && traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription | undefined;\n  return source$.pipe(\n    tap(\n      a => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          if (traceSubscription) {\n            traceSubscription.unsubscribe();\n          }\n\n          traceSubscription = undefined;\n        }\n      },\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {\n      },\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => {\n      }\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n","import { ApplicationRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== 'undefined' && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    // tslint:disable-next-line:no-unused-expression\n    perf.dataCollectionEnabled;\n  }\n}\n"]}