{"version":3,"file":"angular-fire-analytics.js","sources":["../../../src/analytics/analytics.ts","../../../src/analytics/analytics.service.ts","../../../src/analytics/analytics.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, tap, shareReplay, switchMap, observeOn } from 'rxjs/operators';\nimport {\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵlazySDKProxy,\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  ɵfirebaseAppFactory,\n  ɵPromiseProxy\n} from '@angular/fire';\nimport { analytics } from 'firebase/app';\n\nexport interface Config {\n  [key: string]: any;\n}\n\nexport const COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.analytics.analyticsCollectionEnabled');\nexport const APP_VERSION = new InjectionToken<string>('angularfire2.analytics.appVersion');\nexport const APP_NAME = new InjectionToken<string>('angularfire2.analytics.appName');\nexport const DEBUG_MODE = new InjectionToken<boolean>('angularfire2.analytics.debugMode');\nexport const CONFIG = new InjectionToken<Config>('angularfire2.analytics.config');\n\nconst APP_NAME_KEY = 'app_name';\nconst APP_VERSION_KEY = 'app_version';\nconst DEBUG_MODE_KEY = 'debug_mode';\nconst ANALYTICS_ID_FIELD = 'measurementId';\nconst GTAG_CONFIG_COMMAND = 'config';\nconst GTAG_FUNCTION_NAME = 'gtag';\nconst DATA_LAYER_NAME = 'dataLayer';\n\nexport interface AngularFireAnalytics extends ɵPromiseProxy<analytics.Analytics> {\n}\n\nlet gtag: (...args: any[]) => void;\nlet analyticsInitialized: Promise<void>;\nconst analyticsInstanceCache: { [key: string]: Observable<analytics.Analytics> } = {};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAnalytics {\n\n  async updateConfig(config: Config) {\n    await analyticsInitialized;\n    gtag(GTAG_CONFIG_COMMAND, this.options[ANALYTICS_ID_FIELD], { ...config, update: true });\n  }\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) private options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    @Optional() @Inject(COLLECTION_ENABLED) analyticsCollectionEnabled: boolean | null,\n    @Optional() @Inject(APP_VERSION) providedAppVersion: string | null,\n    @Optional() @Inject(APP_NAME) providedAppName: string | null,\n    @Optional() @Inject(DEBUG_MODE) debugModeEnabled: boolean | null,\n    @Optional() @Inject(CONFIG) providedConfig: Config | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n\n    if (!analyticsInitialized) {\n      if (isPlatformBrowser(platformId)) {\n        gtag = window[GTAG_FUNCTION_NAME] || ((...args: any[]) => {\n          window[DATA_LAYER_NAME].push(args);\n        });\n        window[DATA_LAYER_NAME] = window[DATA_LAYER_NAME] || [];\n        analyticsInitialized = zone.runOutsideAngular(() =>\n          new Promise(resolve => {\n            window[GTAG_FUNCTION_NAME] = (...args: any[]) => {\n              if (args[0] === 'js') {\n                resolve();\n              }\n              gtag(...args);\n            };\n          })\n        );\n      } else {\n        gtag = () => {\n        };\n        analyticsInitialized = Promise.resolve();\n      }\n    }\n\n    let analytics = analyticsInstanceCache[options[ANALYTICS_ID_FIELD]];\n    if (!analytics) {\n      analytics = of(undefined).pipe(\n        observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n        switchMap(() => isPlatformBrowser(platformId) ? import('firebase/analytics') : EMPTY),\n        map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n        map(app => app.analytics()),\n        tap(analytics => {\n          if (analyticsCollectionEnabled === false) {\n            analytics.setAnalyticsCollectionEnabled(false);\n          }\n        }),\n        shareReplay({ bufferSize: 1, refCount: false })\n      );\n      analyticsInstanceCache[options[ANALYTICS_ID_FIELD]] = analytics;\n    }\n\n    if (providedConfig) {\n      this.updateConfig(providedConfig);\n    }\n    if (providedAppName) {\n      this.updateConfig({ [APP_NAME_KEY]: providedAppName });\n    }\n    if (providedAppVersion) {\n      this.updateConfig({ [APP_VERSION_KEY]: providedAppVersion });\n    }\n    if (debugModeEnabled) {\n      this.updateConfig({ [DEBUG_MODE_KEY]: 1 });\n    }\n\n    return ɵlazySDKProxy(this, analytics, zone);\n\n  }\n\n}\n","import {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  Injector,\n  NgModuleFactory,\n  NgZone,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID\n} from '@angular/core';\nimport { from, Observable, of, Subscription } from 'rxjs';\nimport { filter, groupBy, map, mergeMap, observeOn, pairwise, startWith, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ActivationEnd, NavigationEnd, Router, ROUTES } from '@angular/router';\nimport { ɵAngularFireSchedulers } from '@angular/fire';\nimport { AngularFireAnalytics, DEBUG_MODE } from './analytics';\nimport { User } from 'firebase/app';\nimport { Title } from '@angular/platform-browser';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\n\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst DEFAULT_SCREEN_CLASS = '???';\nconst NG_PRIMARY_OUTLET = 'primary';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n\nconst ANNOTATIONS = '__annotations__';\n\n\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2 ** 32 - 1)) - 2 ** 31;\n\nconst knownScreenInstanceIDs: { [key: string]: number } = {};\n\nconst getScreenInstanceID = (params: { [key: string]: any }) => {\n  // unique the screen class against the outlet name\n  const screenInstanceKey = [\n    params[SCREEN_CLASS_KEY],\n    params[OUTLET_KEY]\n  ].join(SCREEN_INSTANCE_DELIMITER);\n  if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n    return knownScreenInstanceIDs[screenInstanceKey];\n  } else {\n    const ret = nextScreenInstanceID++;\n    knownScreenInstanceIDs[screenInstanceKey] = ret;\n    return ret;\n  }\n};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class ScreenTrackingService implements OnDestroy {\n\n  private disposable: Subscription | undefined;\n\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() router: Router,\n    @Optional() title: Title,\n    componentFactoryResolver: ComponentFactoryResolver,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    @Optional() @Inject(DEBUG_MODE) debugModeEnabled: boolean | null,\n    zone: NgZone,\n    injector: Injector\n  ) {\n    if (!router || !isPlatformBrowser(platformId)) {\n      return this;\n    }\n    zone.runOutsideAngular(() => {\n      const activationEndEvents = router.events.pipe(filter<ActivationEnd>(e => e instanceof ActivationEnd));\n      const navigationEndEvents = router.events.pipe(filter<NavigationEnd>(e => e instanceof NavigationEnd));\n      this.disposable = navigationEndEvents.pipe(\n        withLatestFrom(activationEndEvents),\n        switchMap(([navigationEnd, activationEnd]) => {\n          // SEMVER: start using optional chains and nullish coalescing once we support newer typescript\n          const pagePath = navigationEnd.url;\n          const screenName = activationEnd.snapshot.routeConfig && activationEnd.snapshot.routeConfig.path || pagePath;\n          const params = {\n            [SCREEN_NAME_KEY]: screenName,\n            [PAGE_PATH_KEY]: pagePath,\n            [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n            [FIREBASE_SCREEN_NAME_KEY]: screenName,\n            [OUTLET_KEY]: activationEnd.snapshot.outlet\n          };\n          if (title) {\n            params[PAGE_TITLE_KEY] = title.getTitle();\n          }\n          const component = activationEnd.snapshot.component;\n          const routeConfig = activationEnd.snapshot.routeConfig;\n          const loadChildren = routeConfig && routeConfig.loadChildren;\n          // TODO figure out how to handle minification\n          if (typeof loadChildren === 'string') {\n            // SEMVER: this is the older lazy load style \"./path#ClassName\", drop this when we drop old ng\n            // TODO is it worth seeing if I can look up the component factory selector from the module name?\n            // it's lazy so it's not registered with componentFactoryResolver yet... seems a pain for a depreciated style\n            return of({ ...params, [SCREEN_CLASS_KEY]: loadChildren.split('#')[1] });\n          } else if (typeof component === 'string') {\n            return of({ ...params, [SCREEN_CLASS_KEY]: component });\n          } else if (component) {\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n            return of({ ...params, [SCREEN_CLASS_KEY]: componentFactory.selector });\n          } else if (loadChildren) {\n            const loadedChildren = loadChildren();\n            const loadedChildren$: Observable<any> = (loadedChildren instanceof Observable) ?\n              loadedChildren :\n              from(Promise.resolve(loadedChildren));\n            return loadedChildren$.pipe(\n              map(lazyModule => {\n                if (lazyModule instanceof NgModuleFactory) {\n                  // AOT create an injector\n                  const moduleRef = lazyModule.create(injector);\n                  // INVESTIGATE is this the right way to get at the matching route?\n                  const routes = moduleRef.injector.get(ROUTES);\n                  const component = routes[0][0].component; // should i just be grabbing 0-0 here?\n                  try {\n                    const componentFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(component);\n                    return { ...params, [SCREEN_CLASS_KEY]: componentFactory.selector };\n                  } catch (_) {\n                    return { ...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS };\n                  }\n                } else {\n                  // JIT look at the annotations\n                  // INVESTIGATE are there public APIs for this stuff?\n                  const declarations = [].concat.apply([], (lazyModule[ANNOTATIONS] || []).map((f: any) => f.declarations));\n                  const selectors = [].concat.apply([], declarations.map((c: any) => (c[ANNOTATIONS] || []).map((f: any) => f.selector)));\n                  // should I just be grabbing the selector like this or should i match against the route component?\n                  //   const routerModule = lazyModule.ngInjectorDef.imports.find(i => i.ngModule && ....);\n                  //   const route = routerModule.providers[0].find(p => p.provide == ROUTES).useValue[0];\n                  return { ...params, [SCREEN_CLASS_KEY]: selectors[0] || DEFAULT_SCREEN_CLASS };\n                }\n              })\n            );\n          } else {\n            return of({ ...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS });\n          }\n        }),\n        map(params => ({\n          [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n          [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n          ...params\n        })),\n        tap(params => {\n          // TODO perhaps I can be smarter about this, bubble events up to the nearest outlet?\n          if (params[OUTLET_KEY] === NG_PRIMARY_OUTLET) {\n            analytics.setCurrentScreen(params[SCREEN_NAME_KEY]);\n            analytics.updateConfig({\n              [PAGE_PATH_KEY]: params[PAGE_PATH_KEY],\n              [SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY]\n            });\n            if (title) {\n              analytics.updateConfig({ [PAGE_TITLE_KEY]: params[PAGE_TITLE_KEY] });\n            }\n          }\n        }),\n        groupBy(params => params[OUTLET_KEY]),\n        // tslint:disable-next-line\n        mergeMap(group => group.pipe(startWith(undefined), pairwise())),\n        map(([prior, current]) => prior ? {\n          [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n          [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n          [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n          ...current\n        } : current),\n        // tslint:disable-next-line:no-console\n        tap(params => debugModeEnabled && console.info(SCREEN_VIEW_EVENT, params)),\n        tap(params => zone.runOutsideAngular(() => analytics.logEvent(SCREEN_VIEW_EVENT, params)))\n      ).subscribe();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class UserTrackingService implements OnDestroy {\n\n  private disposable: Subscription | undefined;\n\n  // TODO a user properties injector\n  constructor(\n    analytics: AngularFireAnalytics,\n    zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    if (!isPlatformServer(platformId)) {\n      zone.runOutsideAngular(() => {\n        // @ts-ignore zap the import in the UMD\n        this.disposable = from(import('firebase/auth')).pipe(\n          observeOn(schedulers.outsideAngular),\n          switchMap(() => analytics.app),\n          map(app => app.auth()),\n          switchMap(auth => new Observable<User | null>(auth.onAuthStateChanged.bind(auth))),\n          switchMap(user => analytics.setUserId(user ? user.uid : null))\n        ).subscribe();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { ScreenTrackingService, UserTrackingService } from './analytics.service';\nimport { AngularFireAnalytics } from './analytics';\n\n@NgModule({\n  providers: [ AngularFireAnalytics ]\n})\nexport class AngularFireAnalyticsModule {\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() screenTracking: ScreenTrackingService,\n    @Optional() userTracking: UserTrackingService\n  ) {\n    // calling anything on analytics will eagerly load the SDK\n    // tslint:disable-next-line:no-unused-expression\n    analytics.app;\n  }\n}\n"]}