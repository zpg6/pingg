{"version":3,"file":"angular-fire-database.js","sources":["../../../src/database/utils.ts","../../../src/database/observable/fromRef.ts","../../../src/database/list/changes.ts","../../../src/database/list/utils.ts","../../../src/database/list/snapshot-changes.ts","../../../src/database/list/state-changes.ts","../../../src/database/list/audit-trail.ts","../../../src/database/list/data-operation.ts","../../../src/database/list/remove.ts","../../../src/database/list/create-reference.ts","../../../src/database/object/snapshot-changes.ts","../../../src/database/object/create-reference.ts","../../../src/database/database.ts","../../../src/database/database.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;SAGgB,QAAQ,CAAC,KAAU;AAAI,IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACnC,CAAC;AACD;AACG;AAAoB;AAAe;AAAI,SAA1B,sBAAsB,CAAC,KAAU;AAAI,IACnD,OAAO,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,CAAC;AAC/C,CAAC;AACD;AACG;AAAkB;AAAe;AAAI,SAAxB,KAAK,CAAC,GAAQ;AAAI,IAChC,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;AAC3C,CAAC;AACD;AACG;AAAoB;AAAe;AAAI,SAA1B,aAAa,CAAC,KAAU;AAAI,IAC1C,OAAO,OAAO,KAAK,CAAC,GAAG,KAAK,UAAU,CAAC;AACzC,CAAC;AACD;AACG;AACwD;AAC9B;AAE1B;AAEA;AAAe;AAAI,SAAN,MAAM,CAAC,QAA2B,EAAE,OAAsB;AAAI;AAChD,IAC5B,OAAO,aAAa,CAAC,OAAO,CAAC,sBAAG,OAAO;AAAG,UACtC,QAAQ,CAAC,GAAG,oBAAC,OAAO,GAAW,CAAC;AACtC,CAAC;AACD;AACG;AAAmB;AAAoB;AAAe;AAAI,SAA7C,mBAAmB,CAAC,IAAuB,EAAE,KAA6B;AAAI,IAC5F,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AACtB,QAAI,OAAO,KAAK,CAAC,UAAU,EAAE,CAAC;AAC9B,KAAG;AAAC,SAAK,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;AAClC,QAAI,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;AAChC,KAAG;AAAC,SAAK,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;AAC3C,QAAI,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;AAChC,KAAG;AACH,IAAE,MAAM,IAAI,KAAK,CAAC,kDAAkD,OAAO,IAAI,EAAE,CAAC,CAAC;AACnF;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAW;AAAe;ACrC9L,8BAGC;AACD;AAEQ;AAAqB,IAL3B,mCAA8B;AAChC;AAAqB,IAAnB,kCAAmC;AACrC;AACA;AACG;AACiE;AACtD;AACI;AACI;AACK;AAEC;AAAe;AAC3C,SADgB,OAAO,CAAI,GAAkB,EAClB,KAAkB,EAClB,UAAU,GAAG,IAAI,EACjB,YAA2B,cAAc;AACjE,IACD,OAAO,IAAI,UAAU;AAAM;AAA6B;AACzC;AAAQ,IADmB,UAAU;AACtD;AAAyB,YAAjB,EAAE,GAAe,IAAI;AAC7B,QAAI,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;AAAO;AAC1B;AACH;AAAuB;AAAY,QAFX,CAAC,QAAQ,EAAE,OAAO;AAClD,YAAM,SAAS,CAAC,QAAQ;AAAM;AACN;AAAgB,YADf;AACzB,gBAAQ,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;AAC/C,aAAO,EAAC,CAAC;AACT,YAAM,IAAI,UAAU,KAAK,MAAM,EAAE;AACjC,gBAAQ,SAAS,CAAC,QAAQ;AAAM;AAC1B;AAEJ,gBAHyB,MAAM,UAAU,CAAC,QAAQ,EAAE,EAAC,CAAC;AACxD,aAAO;AACP,SAAK;AAAQ;AACU;AAAuB;AAC3C,QAFI,GAAG;AACV,YAAM,SAAS,CAAC,QAAQ;AAAM;AAC5B;AAEO,YAHgB,MAAM,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC,CAAC;AACtD,SAAK,EAAC,CAAC;AACP,QACI,IAAI,UAAU,KAAK,IAAI,EAAE;AAC7B,YAAM,OAAO;AACb;AAAoB;AACO;AACR,gBAFX,WAAW;AACnB,oBAAU,IAAI,EAAE,IAAI,IAAI,EAAE;AAC1B,wBAAY,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC/B,qBAAW;AACX,iBAAS;AACT,aAAO,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,OAAO;AACb;AAAoB;AAIlB;AACS,gBALH,WAAW;AACnB,iBAAS;AACT,aAAO,CAAC;AACR,SAAK;AACL,KAAG,EAAC,CAAC,IAAI,CACL,GAAG;AAAM;AACK;AAAmB;AACrC,IAFQ,OAAO;AACf,cAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,OAAO;AAC3C;AAAyB,YAAf,GAAG,GAAkB,IAAI;AACnC,QAAM,IAAI,QAAQ,CAAC,MAAM,EAAE,EAAE;AAC7B,YAAQ,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AAC3B,SAAO;AACP,QAAM,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAC9D,KAAK,EAAC,EACF,KAAK,EAAE,CACR,CAAC;AACJ;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAkB;AAAqB;AAAyB;AAAe;AAAI,SCpDtP,WAAW,CAAU,GAAkB,EAAE,MAAoB,EAAE,SAAyB;AAAI,IAC1G,OAAO,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAClD,SAAS;AAAM;AACD;AAAmB;AAAQ,IAD/B,cAAc;AAC5B;AAAyB,cAAb,WAAW,GAAG,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;AAC9C,QAAM,MAAM,CAAC,OAAO;AAAM;AAA4B;AAAuB;AAC3E,QADmB,KAAK,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,EAAC,CAAC;AACtF,QAAM,OAAO,KAAK,CAAC,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7D,KAAK,EAAC,EACF,oBAAoB,EAAE,CACvB,CAAC;AACJ,CAAC;AACD;AACG;AAAe;AAAsB;AAAkB;AAC9C;AADZ,SAAS,WAAW,CAAI,OAA4B,EAAE,GAAG;AACzD;AAAqB,UAAb,GAAG,GAAG,OAAO,CAAC,MAAM;AAC5B,IAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,QAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,EAAE;AACxC,YAAM,OAAO,CAAC,CAAC;AACf,SAAK;AACL,KAAG;AACH,IAAE,OAAO,CAAC,CAAC,CAAC;AACZ,CAAC;AACD;AACG;AAAe;AAAsB;AAAuB;AAC7D;AADF,SAAS,aAAa,CAAI,OAA4B,EAAE,OAAgB;AACxE,IAAE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;AACtB,QAAI,OAAO,CAAC,CAAC;AACb,KAAG;AAAC,SAAK;AACT;AAAyB,cAAf,CAAC,GAAG,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC;AAC3C,QAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAClB,YAAM,OAAO,OAAO,CAAC,MAAM,CAAC;AAC5B,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,CAAC,GAAG,CAAC,CAAC;AACnB,SAAK;AACL,KAAG;AACH,CAAC;AACD;AACG;AAAsB;AACjB;AAAe;AADvB,SAAS,SAAS,CAAC,OAAO,EAAE,MAAM;AAClC,UAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,MAAM;AAC1C;AAAqB,UAAb,kBAAkB,GAAG,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC;AACtD;AAAqB,UAAb,wBAAwB,GAAG,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC;AAClE,IAAE,QAAQ,MAAM,CAAC,IAAI;AACrB,QAAI,KAAK,OAAO;AAChB,YAAM,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;AACrD;AACK,oBADO,OAAO,GAAG,IAAI;AAC1B,gBAAQ,MAAM,CAAC,OAAO,CAAC,OAAO;AAAM;AACN;AAA+B;AAC5D,gBAF8B,OAAO;AACtC;AAAqC,0BAArB,MAAM,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE;AAC9E,oBAAU,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;AAChC,oBAAU,OAAO,GAAG,CAAC,GAAG,OAAO,EAAE,MAAM,CAAC,CAAC;AACzC,oBAAU,OAAO,KAAK,CAAC;AACvB,iBAAS,EAAC,CAAC;AACX,aAAO;AACP,YAAM,OAAO,OAAO,CAAC;AACrB,QAAI,KAAK,aAAa;AACtB,YAAM,IAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE;AACnC;AACQ;AAAiC,sBAA3B,QAAQ,GAAG,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC;AACxD,gBAAQ,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,IAAI,IAAI,MAAM,OAAO,EAAE;AAC5D,oBAAU,OAAO,GAAG,OAAO,CAAC,MAAM;AAAM;AACpC;AAAmC;AACvC,oBAFmC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,EAAC,CAAC;AACvE,oBAAU,OAAO,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC9D,iBAAS;AACT,aAAO;AAAC,iBAAK,IAAI,OAAO,IAAI,IAAI,EAAE;AAClC,gBAAQ,OAAO,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;AACpC,aAAO;AAAC,iBAAK;AACb,gBAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AAClC,gBAAQ,OAAO,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5D,aAAO;AACP,YAAM,OAAO,OAAO,CAAC;AACrB,QAAI,KAAK,eAAe;AACxB,YAAM,OAAO,OAAO,CAAC,MAAM;AAAM;AAA4B;AACtC;AACV,YAFe,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,EAAC,CAAC;AAChE,QAAI,KAAK,eAAe;AACxB,YAAM,OAAO,OAAO,CAAC,GAAG;AAAM;AAA4B;AACxC;AACR,YAFe,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,GAAG,MAAM,GAAG,CAAC,EAAC,CAAC;AAClE,QAAI,KAAK,aAAa;AACtB,YAAM,IAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE;AACnC;AAAiC,sBAAnB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,gBAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AAClC,gBAAQ,OAAO,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1D,gBAAQ,OAAO,OAAO,CAAC;AACvB,aAAO;AACP,YAAM,OAAO,OAAO,CAAC;AACrB;AACI,QAAA;AACJ,YAAM,OAAO,OAAO,CAAC;AACrB,KAAG;AACH;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAsB;AAAe;AAAI,SCxF7L,mBAAmB,CAAC,MAAc;AAClD,IAAE,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5C,QAAI,MAAM,GAAG,CAAC,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;AAC9E,KAAG;AACH,IAAE,OAAO,MAAM,CAAC;AAChB;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAoB;AAAsB;AAAyB;AAAe;AAAI,SCHzP,eAAe,CAC7B,KAAoB,EACpB,MAAqB,EACrB,SAAyB;AACxB,IACD,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;AACvC,IAAE,OAAO,WAAW,CAAI,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAClD;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAoB;AAAsB;AAAyB;AAAe;AAAI,SCRzP,YAAY,CAAI,KAAoB,EAAE,MAAqB,EAAE,SAAyB;AACtG,IAAE,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;AACvC;AAAqB,UAAb,WAAW,GAAG,MAAM,CAAC,GAAG;AAAM;AAAwB;AAAmB;AAC9E,IAD8B,KAAK,IAAI,OAAO,CAAI,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,EAAC;AACpF,IAAE,OAAO,KAAK,CAAC,GAAG,WAAW,CAAC,CAAC;AAC/B;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAoB;AAAsB;AAAyB;AAAe;AAAI,SCHzP,UAAU,CAAI,KAAoB,EAAE,MAAqB,EAAE,SAAyB;AAAI;AAAqB,UACrH,WAAW,GAAG,YAAY,CAAI,KAAK,EAAE,MAAM,CAAC;AACpD,SAAK,IAAI,CACH,IAAI;AAAM;AAA0B;AAExC;AAAmB;AAAQ,IAFlB,CAAC,OAAO,EAAE,MAAM,KAAK,CAAC,GAAG,OAAO,EAAE,MAAM,CAAC,GAAE,EAAE,CAAC,CACpD;AACL,IAAE,OAAO,aAAa,CAAI,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;AACzD,CAAC;AACD;AACG;AAAW;AAAd,6BAGC;AACD;AACY;AAAqB,IAJ/B,8BAAsC;AACxC;AAAqB,IAAnB,uCAAmB;AACrB;AACA;AACG;AAAe;AAAoB;AAAyB;AAAe;AAA9E,SAAS,UAAU,CAAI,KAAoB,EAAE,SAAyB;AAAI;AACzC;AACE;AACO,IACxC,OAAO,OAAO,CAAI,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC;AACpD,SAAG,IAAI,CACH,GAAG;AAAM;AACK;AAAmB;AACpC,IAFO,IAAI;AACZ;AACE;AACA,YADQ,aAAa;AACvB;AACE,QAAI,IAAI,CAAC,OAAO,CAAC,OAAO;AAAM;AACV;AAAuB;AACrC,QAFmB,KAAK;AAChC,YAAQ,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC;AAAC,YAAA,OAAO,KAAK,CAAC;AAChD,SAAO,EAAC,CAAC;AACT;AACE,QAAI,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;AACrC,KAAK,EAAC,CACH,CAAC;AACJ,CAAC;AACD;AACG;AAAe;AAAoB;AAAsB;AAAyB;AAAe;AAApG,SAAS,aAAa,CAAI,KAAoB,EAAE,OAAwC,EAAE,SAAyB;AACnH;AAAqB,UAAb,OAAO,GAAG,UAAU,CAAI,KAAK,EAAE,SAAS,CAAC;AACjD,IAAE,OAAO,OAAO;AAChB,SAAK,IAAI,CACH,cAAc,CAAC,OAAO,CAAC;AAC5B;AAAoE;AACC,IAChE,GAAG;AAAM;AACb;AAAmB;AAAQ,IADnB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC;AAC5B;AACA;AAAyB,cAAX,aAAa,GAAG,MAAM,CAAC,aAAa;AAClD;AACA;AAAyB,cAAX,UAAU,GAAG,OAAO,CAAC,GAAG;AAAM;AAC/B;AAAuB;AAAY,QADT,IAAI,IAAI,IAAI,CAAC,GAAG,EAAC;AACxD,QAAQ,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC;AACtD,KAAO,EAAC;AACP;AAAkE;AACE;AAC3B,IACpC,SAAS;AAAM;AAAuB;AAAmB;AAAQ,IAAvD,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAC;AAC1E;AAA2D;AACrB,IACjC,GAAG;AAAM;AACT;AAEU;AAAQ,IAHd,IAAI,IAAI,IAAI,CAAC,OAAO,EAAC,CAC1B,CAAC;AACN;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAkB;AAAwB;AAAe;AAAI,SC3DhO,yBAAyB,CAAI,GAAsB,EAAE,SAAiB;AACtF,IAAE;AAAY;AAAmB;AAAuB;AAChD;AAAmB;AAAQ,IAD1B,SAAS,aAAa,CAAI,IAAuB,EAAE,KAAQ;AACpE,QAAI,OAAO,mBAAmB,CAAC,IAAI,EAAE;AACrC,YAAM,UAAU;AAAO;AAA2B;AAAgB,YAAhD,MAAM,GAAG,CAAC,KAAK,oBAAC,IAAI,GAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAA;AACnE,YAAM,YAAY;AAAO;AAA2B;AAAgB,YAAhD,MAAM,oBAAC,IAAI,IAAuB,SAAS,CAAC,CAAC,KAAK,CAAC,CAAA;AACvE,YAAM,YAAY;AAAO;AAA2B;AAAgB,YAAhD,MAAM,oBAAC,IAAI,IAAyB,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAA;AAC7E,SAAK,CAAC,CAAC;AACP,KAAG,EAAC;AACJ;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAyE;AAAuB;AAAI;AAAe;AAAkB;AAAe;AAAI,SCPxS,kBAAkB,CAAI,GAAsB;AAC5D,IAAE;AAAY;AAAwB;AAAmB;AAClD,IADE,SAAS,MAAM,CAAC,IAAwB;AAAI,QACjD,IAAI,CAAC,IAAI,EAAE;AAAE,YAAA,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;AAAC,SAAC;AACvC,QAAI,OAAO,mBAAmB,CAAC,IAAI,EAAE;AACrC,YAAM,UAAU;AAAO;AAA2B;AAC5C,YADY,MAAM,GAAG,CAAC,KAAK,oBAAC,IAAI,GAAW,CAAC,MAAM,EAAE,CAAA;AAC1D,YAAM,YAAY;AAAO;AAA2B;AAChD,YADgB,MAAM,oBAAC,IAAI,IAAuB,MAAM,EAAE,CAAA;AAC9D,YAAM,YAAY;AAAO;AAA2B;AAAgB,YAAhD,MAAM,oBAAC,IAAI,IAAyB,GAAG,CAAC,MAAM,EAAE,CAAA;AACpE,SAAK,CAAC,CAAC;AACP,KAAG,EAAC;AACJ;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAoB;AAAyB;AAAe;AAAI,SCNnO,mBAAmB,CAAS,KAAoB,EAAE,UAA+B;AAAI;AACpG,UAAO,uBAAuB,GAAG,UAAU,CAAC,UAAU,CAAC,cAAc;AACtE;AAAqB,UAAb,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG;AAAM;AACpD;AACH,IAFkD,MAAM,KAAK,CAAC,GAAG,EAAC;AACrE,IAAE,OAAO;AACT,QAAI,KAAK;AACT,QAAI,MAAM,EAAE,yBAAyB,CAAa,SAAS,EAAE,QAAQ,CAAC;AACtE,QAAI,GAAG,EAAE,yBAAyB,CAAI,SAAS,EAAE,KAAK,CAAC;AACvD,QAAI,IAAI;AAAO;AAA2B;AACtB;AAAY,QADtB,CAAC,IAAO,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC3C,QAAI,MAAM,EAAE,kBAAkB,CAAC,SAAS,CAAC;AACzC;AAAY;AAA8B;AACtB;AAAY,QAD5B,eAAe,CAAC,MAAqB;AACzC,YAAM,OAAO,eAAe,CAAI,KAAK,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAChH,SAAK;AACL;AAAY;AACZ;AAAuB;AAAY,QAD/B,YAAY,CAAC,MAAqB;AACtC,YAAM,OAAO,YAAY,CAAI,KAAK,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAC7G,SAAK;AACL;AAAY;AACV;AAAuB;AAAY,QADjC,UAAU,CAAC,MAAqB;AACpC,YAAM,OAAO,UAAU,CAAI,KAAK,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAC3G,SAAK;AACL;AAAY;AACZ;AAAuB;AAAY,QAD/B,YAAY,CAAC,MAAqB;AACtC;AAA6B,kBAAjB,gBAAgB,GAAG,eAAe,CAAI,KAAK,EAAE,MAAM,EAAE,uBAAuB,CAAC;AACzF,YAAM,OAAO,gBAAgB,CAAC,IAAI,CAC1B,GAAG;AAAM;AAAkC;AACrC;AAAgB,YADlB,OAAO,IAAI,OAAO,CAAC,GAAG;AAAM;AACpC;AAA2B;AAC1B,YAF8B,CAAC,uBAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAK,EAAC,EAAC,EACtD,UAAU,CAAC,sBAAsB,CAClC,CAAC;AACR,SAAK;AACL,KAAG,CAAC;AACJ;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAoB;AAAyB;AAAe;AAAI,SChCnO,2BAA2B,CAAI,KAAoB,EAAE,SAAyB;AAC9F,IAAE;AAAY;AAAmB;AAAQ,IAAhC,SAAS,eAAe;AAAK,QAClC,OAAO,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACpD,KAAG,EAAC;AACJ;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAI;AAAe;AAAoB;AAAyB;AAAe;AAAI,SCJnO,qBAAqB,CAAS,KAAoB,EAAE,UAA+B;AAAI,IACrG,OAAO;AACT,QAAI,KAAK;AACT;AAAY;AACJ;AAAuB;AAAY,QADvC,eAAe;AAAK,YAClB,OAAO,2BAA2B,CAAI,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CACvF,UAAU,CAAC,sBAAsB,CAClC,CAAC;AACR,SAAK;AACL;AAAY;AAA2B;AAAuB;AAAY,QAAtE,MAAM,CAAC,IAAgB,IAAI,0BAAO,KAAK,CAAC,GAAG,CAAC,MAAM,oBAAC,IAAI,GAAQ,GAAkB,EAAE;AACvF;AAAY;AAA2B;AAAuB;AACvD,QADH,GAAG,CAAC,IAAO,IAAI,0BAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAkB,EAAE;AACjE;AAAY;AAAuB;AAAY,QAA3C,MAAM,KAAK,0BAAO,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAkB,EAAE;AAC5D;AAAY;AACD;AAAuB;AAAY,QAD1C,YAAY;AAAK;AACK,kBAAd,gBAAgB,GAAG,2BAA2B,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;AACzG,YAAM,OAAO,gBAAgB,CAAC,IAAI,CAC1B,UAAU,CAAC,sBAAsB,EACjC,GAAG;AAAM;AAAiC;AAA2B;AAE3E,YAFU,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,sBAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAQ,IAAI,EAAC,CAC1E,CAAC;AACR,SAAK;AACL,KAAG,CAAC;AACJ;AACA;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAiB,MCPpK,GAAG,GAAG,IAAI,cAAc,CAAS,kCAAkC;AAChF,MAIa,mBAAmB;AAChC;AAAQ;AAA0B;AAEjB;AAA8B;AACzB;AAAuB;AAAQ,IAEnD,YAC4B,OAAwB,EACX,YAA2D,EACzE,WAA0B;AACtD;AACA,IAAwB,UAAkB,EACvC,IAAY;AACb,QACC,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACvD,QAAI,IAAI,CAAC,sBAAsB,GAAG,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClF,QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB;AAAM;AAC5B;AAAY,QADW;AAC3C;AAA6B,kBAAjB,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC;AAClE,YAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;AACpD,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AACO;AAAmB;AAA4B;AAClD;AAAmB;AAAQ,IAD7B,IAAI,CAAI,SAAwB,EAAE,OAAiB;AAAI;AACpD,cAAK,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;AAChD;AAAyB,YAAjB,KAAK,GAAkB,GAAG;AAClC,QAAI,IAAI,OAAO,EAAE;AACjB,YAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAK;AACL,QAAI,OAAO,mBAAmB,CAAI,KAAK,EAAE,IAAI,CAAC,CAAC;AAC/C,KAAG;AACH;AACO;AAAmB;AAA4B;AAC3C;AAAQ,IADjB,MAAM,CAAI,SAAwB;AAAI;AACrC,cAAO,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;AAChD,QAAI,OAAO,qBAAqB,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC;AAC/C,KAAG;AACH;AACO;AACA;AAAQ,IADb,YAAY;AACd,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;AAC1C,KAAG;AACH;+CA3CC,UAAU,SAAC,kBACV,UAAU,EAAE,KAAK,cAClB,4JACI;AAAC;AAAmB;AACU,4CAM9B,MAAM,SAAC,gBAAgB;AAAS,4CAChC,QAAQ,YAAI,MAAM,SAAC,iBAAiB;AAAS,4CAC7C,QAAQ,YAAI,MAAM,SAAC,GAAG;AAAS,YAEC,MAAM,uBAAtC,MAAM,SAAC,WAAW;AAAS,YAlCa,MAAM;AAAG;AAAG;;;;;;;;;;;;;;;;;;;;;;2DAMzD;AAAC;AAAa;AACA,IAiBZ,uCAA4C;AAC9C;AACoB,IAAlB,yCAAmD;AACrD;AAAqB,IAAnB,qDAAkF;AACpF;AACC;AAAC;AAAI;AACmB;AAC6D;AAAI,MCzB7E,yBAAyB;AAAG;qDAHxC,QAAQ,SAAC,kBACR;EAAS,EAAE,CAAE,mBAAmB,CAAE,cACnC;;;;;;0BACI;AAAC;AAAC;AAAI;AACT;AAAqH;AAAI;AAAC;AAAI;AAAkC;AAAqH;AAAI;AAAC;AAAsJ","sourcesContent":["import { DatabaseReference, FirebaseOperation, FirebaseOperationCases, PathReference } from './interfaces';\nimport { database } from 'firebase/app';\n\nexport function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\nexport function isFirebaseDataSnapshot(value: any): boolean {\n  return typeof value.exportVal === 'function';\n}\n\nexport function isNil(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isFirebaseRef(value: any): boolean {\n  return typeof value.set === 'function';\n}\n\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nexport function getRef(database: database.Database, pathRef: PathReference): DatabaseReference {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef as DatabaseReference\n    : database.ref(pathRef as string);\n}\n\nexport function checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases): Promise<void> {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n","import { AngularFireAction, DatabaseQuery, DatabaseSnapshot, ListenEvent } from '../interfaces';\nimport { asyncScheduler, Observable, SchedulerLike } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\ninterface SnapshotPrevKey<T> {\n  snapshot: DatabaseSnapshot<T>;\n  prevKey: string | null | undefined;\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nexport function fromRef<T>(ref: DatabaseQuery,\n                           event: ListenEvent,\n                           listenType = 'on',\n                           scheduler: SchedulerLike = asyncScheduler\n): Observable<AngularFireAction<DatabaseSnapshot<T>>> {\n  return new Observable<SnapshotPrevKey<T>>(subscriber => {\n    let fn: any | null = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({ snapshot, prevKey });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        unsubscribe() {\n        }\n      };\n    }\n  }).pipe(\n    map(payload => {\n      const { snapshot, prevKey } = payload;\n      let key: string | null = null;\n      if (snapshot.exists()) {\n        key = snapshot.key;\n      }\n      return { type: event, payload: snapshot, prevKey, key };\n    }),\n    share()\n  );\n}\n","import { fromRef } from '../observable/fromRef';\nimport { merge, Observable, of, SchedulerLike } from 'rxjs';\n\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { isNil } from '../utils';\n\nimport { distinctUntilChanged, scan, switchMap } from 'rxjs/operators';\n\nexport function listChanges<T = any>(ref: DatabaseQuery, events: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(\n    switchMap(snapshotAction => {\n      const childEvent$ = [of(snapshotAction)];\n      events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n      return merge(...childEvent$).pipe(scan(buildView, []));\n    }),\n    distinctUntilChanged()\n  );\n}\n\nfunction positionFor<T>(changes: SnapshotAction<T>[], key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction positionAfter<T>(changes: SnapshotAction<T>[], prevKey?: string) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const { payload, prevKey, key } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = { payload, type: 'value', prevKey, key: payload.key };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n","import { isNil } from '../utils';\n\nexport function validateEventsArray(events?: any[]) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { listChanges } from './changes';\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { validateEventsArray } from './utils';\n\nexport function snapshotChanges<T>(\n  query: DatabaseQuery,\n  events?: ChildEvent[],\n  scheduler?: SchedulerLike\n): Observable<SnapshotAction<T>[]> {\n  events = validateEventsArray(events);\n  return listChanges<T>(query, events, scheduler);\n}\n","import { ChildEvent, DatabaseQuery } from '../interfaces';\nimport { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { merge, SchedulerLike } from 'rxjs';\n\nexport function stateChanges<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef<T>(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n","import { AngularFireAction, ChildEvent, DatabaseQuery, DataSnapshot, SnapshotAction } from '../interfaces';\nimport { stateChanges } from './state-changes';\nimport { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\n\nimport { map, scan, skipWhile, withLatestFrom } from 'rxjs/operators';\n\nexport function auditTrail<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  const auditTrail$ = stateChanges<T>(query, events)\n    .pipe(\n      scan((current, action) => [...current, action], [])\n    );\n  return waitForLoaded<T>(query, auditTrail$, scheduler);\n}\n\ninterface LoadedMetadata {\n  data: AngularFireAction<DataSnapshot>;\n  lastKeyToLoad: any;\n}\n\nfunction loadedData<T>(query: DatabaseQuery, scheduler?: SchedulerLike): Observable<LoadedMetadata> {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef<T>(query, 'value', 'on', scheduler)\n  .pipe(\n    map(data => {\n      // Store the last key in the data set\n      let lastKeyToLoad;\n      // Loop through loaded dataset to find the last key\n      data.payload.forEach(child => {\n        lastKeyToLoad = child.key; return false;\n      });\n      // return data set and the current last key loaded\n      return { data, lastKeyToLoad };\n    })\n  );\n}\n\nfunction waitForLoaded<T>(query: DatabaseQuery, action$: Observable<SnapshotAction<T>[]>, scheduler?: SchedulerLike) {\n  const loaded$ = loadedData<T>(query, scheduler);\n  return loaded$\n    .pipe(\n      withLatestFrom(action$),\n      // Get the latest values from the \"loaded\" and \"child\" datasets\n      // We can use both datasets to form an array of the latest values.\n      map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n      }),\n      // This is the magical part, only emit when the last load key\n      // in the dataset has been loaded by a child event. At this point\n      // we can assume the dataset is \"whole\".\n      skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n      // Pluck off the meta data because the user only cares\n      // to iterate through the snapshots\n      map(meta => meta.actions)\n    );\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\nexport function createDataOperationMethod<T>(ref: DatabaseReference, operation: string) {\n  return function dataOperation<T>(item: FirebaseOperation, value: T) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string)[operation](value),\n      firebaseCase: () => (item as DatabaseReference)[operation](value),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref[operation](value)\n    });\n  };\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nexport function createRemoveMethod<T>(ref: DatabaseReference) {\n  return function remove(item?: FirebaseOperation): any {\n    if (!item) { return ref.remove(); }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string).remove(),\n      firebaseCase: () => (item as DatabaseReference).remove(),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref.remove()\n    });\n  };\n}\n","import { AngularFireList, ChildEvent, DatabaseQuery } from '../interfaces';\nimport { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { AngularFireDatabase } from '../database';\nimport { map } from 'rxjs/operators';\n\nexport function createListReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireList<T> {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod<Partial<T>>(refInZone, 'update'),\n    set: createDataOperationMethod<T>(refInZone, 'set'),\n    push: (data: T) => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events?: ChildEvent[]) {\n      return snapshotChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    stateChanges(events?: ChildEvent[]) {\n      return stateChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    auditTrail(events?: ChildEvent[]) {\n      return auditTrail<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    valueChanges(events?: ChildEvent[]) {\n      const snapshotChanges$ = snapshotChanges<T>(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(\n        map(actions => actions.map(a => a.payload.val() as T)),\n        afDatabase.keepUnstableUntilFirst\n      );\n    }\n  };\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\nimport { DatabaseQuery, SnapshotAction } from '../interfaces';\n\nexport function createObjectSnapshotChanges<T>(query: DatabaseQuery, scheduler?: SchedulerLike) {\n  return function snapshotChanges(): Observable<SnapshotAction<T>> {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n","import { map } from 'rxjs/operators';\nimport { AngularFireObject, DatabaseQuery } from '../interfaces';\nimport { createObjectSnapshotChanges } from './snapshot-changes';\nimport { AngularFireDatabase } from '../database';\n\nexport function createObjectReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireObject<T> {\n  return {\n    query,\n    snapshotChanges<T>() {\n      return createObjectSnapshotChanges<T>(query, afDatabase.schedulers.outsideAngular)().pipe(\n        afDatabase.keepUnstableUntilFirst\n      );\n    },\n    update(data: Partial<T>) { return query.ref.update(data as any) as Promise<void>; },\n    set(data: T) { return query.ref.set(data) as Promise<void>; },\n    remove() { return query.ref.remove() as Promise<void>; },\n    valueChanges<T>() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(\n        afDatabase.keepUnstableUntilFirst,\n        map(action => action.payload.exists() ? action.payload.val() as T : null)\n      );\n    },\n  };\n}\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { AngularFireList, AngularFireObject, DatabaseQuery, PathReference, QueryFn } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory\n} from '@angular/fire';\nimport { Observable } from 'rxjs';\nimport { database } from 'firebase/app';\nimport 'firebase/database';\n\nexport const URL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireDatabase {\n  public readonly database: database.Database;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n  public readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    @Optional() @Inject(URL) databaseURL: string | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n\n    this.database = zone.runOutsideAngular(() => {\n      const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.database, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T> {\n    const ref = getRef(this.database, pathOrRef);\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n","import { NgModule } from '@angular/core';\nimport { AngularFireDatabase } from './database';\n\n@NgModule({\n  providers: [ AngularFireDatabase ]\n})\nexport class AngularFireDatabaseModule { }\n"]}