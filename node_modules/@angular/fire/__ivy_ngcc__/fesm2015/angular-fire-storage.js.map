{"version":3,"file":"angular-fire-storage.js","sources":["../../../src/storage/observable/fromTask.ts","../../../src/storage/task.ts","../../../src/storage/ref.ts","../../../src/storage/storage.ts","../../../src/storage/storage.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { UploadTask, UploadTaskSnapshot } from '../interfaces';\n\nexport function fromTask(task: UploadTask) {\n  return new Observable<UploadTaskSnapshot>(subscriber => {\n    const progress = (snap: UploadTaskSnapshot) => subscriber.next(snap);\n    const error = e => subscriber.error(e);\n    const complete = () => subscriber.complete();\n    task.on('state_changed', progress, error, complete);\n    return () => task.cancel();\n  });\n}\n","import { UploadTask, UploadTaskSnapshot } from './interfaces';\nimport { fromTask } from './observable/fromTask';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface AngularFireUploadTask {\n  task: UploadTask;\n  snapshotChanges(): Observable<UploadTaskSnapshot | undefined>;\n  percentageChanges(): Observable<number | undefined>;\n  pause(): boolean;\n  cancel(): boolean;\n  resume(): boolean;\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshot) => any) | null,\n    onRejected?: ((a: Error) => any) | null\n  ): Promise<any>;\n  catch(onRejected: (a: Error) => any): Promise<any>;\n}\n\n/**\n * Create an AngularFireUploadTask from a regular UploadTask from the Storage SDK.\n * This method creates an observable of the upload and returns on object that provides\n * multiple methods for controlling and monitoring the file upload.\n */\nexport function createUploadTask(task: UploadTask): AngularFireUploadTask {\n  const inner$ = fromTask(task);\n  return {\n    task,\n    then: task.then.bind(task),\n    catch: task.catch.bind(task),\n    pause: task.pause.bind(task),\n    cancel: task.cancel.bind(task),\n    resume: task.resume.bind(task),\n    snapshotChanges: () => inner$,\n    percentageChanges: () => inner$.pipe(\n      map(s => s.bytesTransferred / s.totalBytes * 100)\n    )\n  };\n}\n","import { ListResult, Reference, SettableMetadata, StringFormat, UploadMetadata } from './interfaces';\nimport { AngularFireUploadTask, createUploadTask } from './task';\nimport { from, Observable, of } from 'rxjs';\nimport { ɵAngularFireSchedulers } from '@angular/fire';\nimport { observeOn, switchMap } from 'rxjs/operators';\n\nexport interface AngularFireStorageReference {\n  getDownloadURL(): Observable<any>;\n  getMetadata(): Observable<any>;\n  delete(): Observable<any>;\n  child(path: string): any;\n  updateMetadata(meta: SettableMetadata): Observable<any>;\n  put(data: any, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\n  putString(data: string, format?: string | undefined, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\n  listAll(): Observable<ListResult>;\n}\n\n/**\n * Create an AngularFire wrapped Storage Reference. This object\n * creates observable methods from promise based methods.\n */\nexport function createStorageRef(\n  ref: Reference,\n  schedulers: ɵAngularFireSchedulers,\n  keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>\n): AngularFireStorageReference {\n  return {\n    getDownloadURL: () => of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => ref.getDownloadURL()),\n      keepUnstableUntilFirst\n    ),\n    getMetadata: () => of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => ref.getMetadata()),\n      keepUnstableUntilFirst\n    ),\n    delete: () => from(ref.delete()),\n    child: (path: string) => createStorageRef(ref.child(path), schedulers, keepUnstableUntilFirst),\n    updateMetadata: (meta: SettableMetadata) => from(ref.updateMetadata(meta)),\n    put: (data: any, metadata?: UploadMetadata) => {\n      const task = ref.put(data, metadata);\n      return createUploadTask(task);\n    },\n    putString: (data: string, format?: StringFormat, metadata?: UploadMetadata) => {\n      const task = ref.putString(data, format, metadata);\n      return createUploadTask(task);\n    },\n    listAll: () => from(ref.listAll())\n  };\n}\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef } from './ref';\nimport { Observable } from 'rxjs';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory\n} from '@angular/fire';\nimport { UploadMetadata } from './interfaces';\nimport { storage } from 'firebase/app';\nimport 'firebase/storage';\n\nexport const BUCKET = new InjectionToken<string>('angularfire2.storageBucket');\n\n/**\n * AngularFireStorage Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for uploading and downloading binary files from Cloud Storage for\n * Firebase.\n */\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireStorage {\n  public readonly storage: storage.Storage;\n\n  public readonly keepUnstableUntilFirst: <T>(obs: Observable<T>) => Observable<T>;\n  public readonly schedulers: ɵAngularFireSchedulers;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    @Optional() @Inject(BUCKET) storageBucket: string | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n\n    this.storage = zone.runOutsideAngular(() => {\n      const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n      return app.storage(storageBucket || undefined);\n    });\n  }\n\n  ref(path: string) {\n    return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);\n  }\n\n  upload(path: string, data: any, metadata?: UploadMetadata) {\n    const storageRef = this.storage.ref(path);\n    const ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);\n    return ref.put(data, metadata);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireStorage } from './storage';\n\n@NgModule({\n  providers: [ AngularFireStorage ]\n})\nexport class AngularFireStorageModule { }\n"]}