{"version":3,"file":"angular-fire-auth-guard.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, NgZone, Optional } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, observeOn, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { User } from 'firebase/app';\nimport {\n  ɵAngularFireSchedulers,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory\n} from '@angular/fire';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<User|null>, Observable<boolean|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  authState: Observable<User|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    private router: Router\n  ) {\n\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n\n    const auth = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => app.auth())),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n      keepUnstableUntilFirst\n    );\n  }\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.authState.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => typeof can === 'boolean' ? can : this.router.createUrlTree(can as any[]))\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n    canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}