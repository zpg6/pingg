{"version":3,"file":"angular-fire-performance.js","sources":["../../../src/performance/performance.ts","../../../src/performance/performance.service.ts","../../../src/performance/performance.module.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp, ɵlazySDKProxy, ɵPromiseProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<performance.Performance> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n\n  private readonly performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled: boolean | null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled: boolean | null,\n    private zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : EMPTY),\n      map(() => zone.runOutsideAngular(() => app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled !== true) {\n          performance.instrumentationEnabled = false;\n        }\n        if (dataCollectionEnabled !== true) {\n          performance.dataCollectionEnabled = false;\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId: string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return {\n        unsubscribe: () => {\n          window.performance.mark(endMarkName);\n          window.performance.measure(traceId, startMarkName, endMarkName);\n        }\n      };\n    });\n  } else {\n    return EMPTY;\n  }\n};\n\nexport const traceUntil = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a => test(a) && traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription | undefined;\n  return source$.pipe(\n    tap(\n      a => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          if (traceSubscription) {\n            traceSubscription.unsubscribe();\n          }\n\n          traceSubscription = undefined;\n        }\n      },\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {\n      },\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => {\n      }\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n","import { ApplicationRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== 'undefined' && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    // tslint:disable-next-line:no-unused-expression\n    perf.dataCollectionEnabled;\n  }\n}\n"],"names":[],"mappings":"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"}