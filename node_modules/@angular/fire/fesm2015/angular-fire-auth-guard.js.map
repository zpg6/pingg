{"version":3,"file":"angular-fire-auth-guard.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"sourcesContent":["import { Inject, Injectable, NgZone, Optional } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, observeOn, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { User } from 'firebase/app';\nimport {\n  ɵAngularFireSchedulers,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory\n} from '@angular/fire';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<User|null>, Observable<boolean|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  authState: Observable<User|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    private router: Router\n  ) {\n\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n\n    const auth = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => app.auth())),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n      keepUnstableUntilFirst\n    );\n  }\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.authState.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => typeof can === 'boolean' ? can : this.router.createUrlTree(can as any[]))\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n    canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAkBsC,IAAI,IAAI,CAAC,CAAC,IAAI;;MAAvC,QAAQ,GAAa,GAAG;MAKxB,oBAAoB;;;;;;;IAI/B,YAC4B,OAAwB,EACX,YAAqD,EAC5F,IAAY,EACJ,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAoBxB,gBAAW;;;;;QAAG,CAAC,IAA4B,EAAE,KAA0B;;kBAC/D,eAAe,GAAG,mBAAA,IAAI,CAAC,IAAI,CAAC,aAAa;;;YAA0B,MAAM,QAAQ,EAAC;YACxF,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,IAAI,CAAC,CAAC,CAAC,EACP,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,EAC5B,GAAG;;;;YAAC,GAAG,IAAI,OAAO,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,oBAAC,GAAG,GAAU,EAAC,CACrF,CAAC;SACH,EAAA;;cAxBO,UAAU,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC;;cAC7C,sBAAsB,GAAG,8BAA8B,CAAC,UAAU,CAAC;;cAEnE,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAC7B,SAAS,CAAC,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAC1D,SAAS;;;QAAC,MAAM,IAAI,CAAC,iBAAiB;;;QAAC,MAAM,OAAO,eAAe,CAAC,EAAC,EAAC,EACtE,GAAG;;;QAAC,MAAM,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,EAAC,EAC3D,GAAG;;;;QAAC,GAAG,IAAI,IAAI,CAAC,iBAAiB;;;QAAC,MAAM,GAAG,CAAC,IAAI,EAAE,EAAC,EAAC,EACpD,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAChD;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CACxB,SAAS;;;;QAAC,IAAI,IAAI,IAAI,UAAU,CAAY,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,EAChF,sBAAsB,CACvB,CAAC;KACH;;;YA7BF,UAAU,SAAC;gBACV,UAAU,EAAE,KAAK;aAClB;;;;4CAMI,MAAM,SAAC,gBAAgB;4CACvB,QAAQ,YAAI,MAAM,SAAC,iBAAiB;YA7BZ,MAAM;YACW,MAAM;;;;;IAwBlD,yCAAiC;;IA0BjC,2CAOC;;;;;IA3BC,sCAAsB;;;MA+Bb,WAAW;;;;AAAG,CAAC,IAAuB,MAAM;IACrD,WAAW,EAAE,CAAE,oBAAoB,CAAE,EAAE,IAAI,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE;CACvE,CAAC;;;;;AAG0C,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;;MAAlE,cAAc,GAAa,GAAG;;;;;AACJ,CAAC,IAAe,KAAK,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;;MAAxF,aAAa,GAAG,SAAS;;;;;AACK,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa;;MAAlE,aAAa,GAAa,GAAG;;;;;AACU,aAAa,IAAI,aAAa,GAAG,aAAa,CAAC,MAAM,GAAG,EAAE;;MAAjG,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,MAA4D;;MAClG,cAAc;;;;AACzB,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,EAAE,GAAG;;;;AAAC,MAAM,IAAK,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAC,CAAC;;MAChE,sBAAsB;;;;AACjC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG;;;;AAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAC,CAAC;;MACxD,kBAAkB;;;;AAC7B,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG;;;;AAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,EAAC,CAAC;;;;;;MCtEhE,0BAA0B;;;YAHtC,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAE,oBAAoB,CAAE;aACpC;;;;;;;;;;;;;;;"}