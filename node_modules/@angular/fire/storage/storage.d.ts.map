{"version":3,"file":"storage.d.ts","sources":["storage.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FirebaseAppConfig, FirebaseOptions, ɵAngularFireSchedulers } from '@angular/fire';\nimport { UploadMetadata } from './interfaces';\nimport { storage } from 'firebase/app';\nimport 'firebase/storage';\nexport declare const BUCKET: InjectionToken<string>;\n/**\n * AngularFireStorage Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for uploading and downloading binary files from Cloud Storage for\n * Firebase.\n */\nexport declare class AngularFireStorage {\n    readonly storage: storage.Storage;\n    readonly keepUnstableUntilFirst: <T>(obs: Observable<T>) => Observable<T>;\n    readonly schedulers: ɵAngularFireSchedulers;\n    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, storageBucket: string | null, platformId: Object, zone: NgZone);\n    ref(path: string): import(\"./ref\").AngularFireStorageReference;\n    upload(path: string, data: any, metadata?: UploadMetadata): import(\"./task\").AngularFireUploadTask;\n}\n"]}