{"version":3,"file":"angular-fire-auth-guard.umd.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"sourcesContent":["import { Inject, Injectable, NgZone, Optional } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, observeOn, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { User } from 'firebase/app';\nimport {\n  ɵAngularFireSchedulers,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory\n} from '@angular/fire';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<User|null>, Observable<boolean|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  authState: Observable<User|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    private router: Router\n  ) {\n\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n\n    const auth = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => app.auth())),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n      keepUnstableUntilFirst\n    );\n  }\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.authState.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => typeof can === 'boolean' ? can : this.router.createUrlTree(can as any[]))\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n    canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"],"names":["map","take","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","of","observeOn","switchMap","ɵfirebaseAppFactory","shareReplay","Observable","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","NgZone","Router","pipe","NgModule"],"mappings":"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"}