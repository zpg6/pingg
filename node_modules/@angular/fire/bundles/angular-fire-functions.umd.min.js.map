{"version":3,"sources":["../../../src/functions/functions.ts","../../../src/functions/functions.module.ts"],"names":["ORIGIN","InjectionToken","REGION","options","nameOrConfig","zone","region","origin","schedulers","ɵAngularFireSchedulers","functions","of","undefined","pipe","observeOn","outsideAngular","switchMap","import","map","ɵfirebaseAppFactory","app","tap","useFunctionsEmulator","shareReplay","bufferSize","refCount","this","httpsCallable","name","data","from","r","ɵlazySDKProxy","Injectable","args","providedIn","Inject","FIREBASE_OPTIONS","Optional","type","FIREBASE_APP_NAME","NgZone","NgModule","providers","AngularFireFunctions"],"mappings":"2fAeaA,EAAS,IAAIC,EAAAA,eAAuB,iCACpCC,EAAS,IAAID,EAAAA,eAAuB,mCAa/C,SAC4BE,EACaC,EACvCC,EAC4BC,EACAC,OAEtBC,EAAa,IAAIC,EAAAA,uBAAuBJ,GAExCK,EAAYC,EAAAA,QAAGC,GAAWC,KAC9BC,EAAAA,UAAUN,EAAWO,gBACrBC,EAAAA,WAAS,WAAO,OAAAC,OAAO,yBACvBC,EAAAA,KAAG,WAAO,OAAAC,EAAAA,oBAAoBhB,EAASE,EAAMD,MAC7Cc,EAAAA,KAAG,SAACE,GAAO,OAAAA,EAAIV,UAAUJ,QAAUM,MACnCS,EAAAA,KAAG,SAACX,GACEH,GACFG,EAAUY,qBAAqBf,MAGnCgB,EAAAA,YAAY,CAAEC,WAAY,EAAGC,UAAU,KAUzC,OAPAC,KAAKC,cAAa,SAAsBC,GAAY,OAAA,SACjDC,GAAY,OAAAC,EAAAA,KAAKpB,GAAWG,KAC3BC,EAAAA,UAAUN,EAAWO,gBACrBC,EAAAA,WAAS,SAACN,GAAa,OAAAA,EAAUiB,cAAcC,EAAxBlB,CAA8BmB,MACrDX,EAAAA,KAAG,SAACa,GAAK,OAAAA,EAAM,WAGZC,EAAAA,cAAcN,KAAMhB,EAAWL,wBApCzC4B,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,4EAOTC,EAAAA,OAAMF,KAAA,CAACG,EAAAA,oDACPC,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMF,KAAA,CAACM,EAAAA,4BA/BqBC,EAAAA,uCAiCxCH,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMF,KAAA,CAAChC,qCACnBoC,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMF,KAAA,CAAClC,+NC5BxB,iCAHC0C,EAAAA,SAAQR,KAAA,CAAC,CACRS,UAAW,CAAEC","sourcesContent":["import { Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport { from, Observable, of } from 'rxjs';\nimport { map, observeOn, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵlazySDKProxy,\n  ɵPromiseProxy\n} from '@angular/fire';\nimport { functions } from 'firebase/app';\n\nexport const ORIGIN = new InjectionToken<string>('angularfire2.functions.origin');\nexport const REGION = new InjectionToken<string>('angularfire2.functions.region');\n\n// override httpsCallable for compatibility with 5.x\nexport interface AngularFireFunctions extends Omit<ɵPromiseProxy<functions.Functions>, 'httpsCallable'> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireFunctions {\n\n  public readonly httpsCallable: <T = any, R = any>(name: string) => (data: T) => Observable<R>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    zone: NgZone,\n    @Optional() @Inject(REGION) region: string | null,\n    @Optional() @Inject(ORIGIN) origin: string | null\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    const functions = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => import('firebase/functions')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.functions(region || undefined)),\n      tap(functions => {\n        if (origin) {\n          functions.useFunctionsEmulator(origin);\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    this.httpsCallable = <T = any, R = any>(name: string) =>\n      (data: T) => from(functions).pipe(\n        observeOn(schedulers.outsideAngular),\n        switchMap(functions => functions.httpsCallable(name)(data)),\n        map(r => r.data as R)\n      );\n\n    return ɵlazySDKProxy(this, functions, zone);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireFunctions } from './functions';\n\n@NgModule({\n  providers: [ AngularFireFunctions ]\n})\nexport class AngularFireFunctionsModule { }\n"]}