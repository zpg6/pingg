{"version":3,"file":"google-map.d.ts","sources":["google-map.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// <reference types=\"googlemaps\" />\nimport { ElementRef, OnChanges, OnDestroy, OnInit, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n/** default options set to the Googleplex */\nexport declare const DEFAULT_OPTIONS: google.maps.MapOptions;\n/** Arbitrary default height for the map element */\nexport declare const DEFAULT_HEIGHT = \"500px\";\n/** Arbitrary default width for the map element */\nexport declare const DEFAULT_WIDTH = \"500px\";\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nexport declare class GoogleMap implements OnChanges, OnInit, OnDestroy {\n    private readonly _elementRef;\n    private _ngZone;\n    private _eventManager;\n    private _googleMapChanges;\n    private readonly _options;\n    private readonly _center;\n    private readonly _zoom;\n    private readonly _destroy;\n    private _mapEl;\n    /**\n     * The underlying google.maps.Map object\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#Map\n     */\n    googleMap?: google.maps.Map;\n    /** Whether we're currently rendering inside a browser. */\n    _isBrowser: boolean;\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n    height: string | number | null;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n    width: string | number | null;\n    /**\n     * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n     */\n    mapTypeId: google.maps.MapTypeId | undefined;\n    set center(center: google.maps.LatLngLiteral | google.maps.LatLng);\n    set zoom(zoom: number);\n    set options(options: google.maps.MapOptions);\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n    boundsChanged: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n    centerChanged: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n    mapClick: Observable<google.maps.MouseEvent | google.maps.IconMouseEvent>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n    mapDblclick: Observable<google.maps.MouseEvent>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n    mapDrag: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n    mapDragend: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n    mapDragstart: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n    headingChanged: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n    idle: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n    maptypeidChanged: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n    mapMousemove: Observable<google.maps.MouseEvent>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n    mapMouseout: Observable<google.maps.MouseEvent>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n    mapMouseover: Observable<google.maps.MouseEvent>;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n    projectionChanged: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n    mapRightclick: Observable<google.maps.MouseEvent>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n    tilesloaded: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n    tiltChanged: Observable<void>;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n    zoomChanged: Observable<void>;\n    constructor(_elementRef: ElementRef, _ngZone: NgZone, \n    /**\n     * @deprecated `platformId` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platformId?: Object);\n    ngOnChanges(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral, padding?: number | google.maps.Padding): void;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x: number, y: number): void;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng: google.maps.LatLng | google.maps.LatLngLiteral): void;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral, padding?: number | google.maps.Padding): void;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds(): google.maps.LatLngBounds | null;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter(): google.maps.LatLng;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons(): boolean;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading(): number;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId(): google.maps.MapTypeId | string;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection(): google.maps.Projection | null;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView(): google.maps.StreetViewPanorama;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt(): number;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom(): number;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls(): google.maps.MVCArray<Node>[];\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data(): google.maps.Data;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes(): google.maps.MapTypeRegistry;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType>;\n    private _setSize;\n    /** Combines the center and zoom and the other map options into a single object */\n    private _combineOptions;\n    private _initializeMap;\n    private _watchForOptionsChanges;\n    private _watchForCenterChanges;\n    private _watchForZoomChanges;\n    /** Asserts that the map has been initialized. */\n    private _assertInitialized;\n}\n"]}