{"version":3,"file":"map-circle.d.ts","sources":["map-circle.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// <reference types=\"googlemaps\" />\nimport { NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMap } from '../google-map/google-map';\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nexport declare class MapCircle implements OnInit, OnDestroy {\n    private readonly _map;\n    private readonly _ngZone;\n    private _eventManager;\n    private readonly _options;\n    private readonly _center;\n    private readonly _radius;\n    private readonly _destroyed;\n    /**\n     * Underlying google.maps.Circle object.\n     *\n     * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n     */\n    circle?: google.maps.Circle;\n    set options(options: google.maps.CircleOptions);\n    set center(center: google.maps.LatLng | google.maps.LatLngLiteral);\n    set radius(radius: number);\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n    centerChanged: Observable<void>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n    circleClick: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n    circleDblclick: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n    circleDrag: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n    circleDragend: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n    circleDragstart: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n    circleMousedown: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n    circleMousemove: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n    circleMouseout: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n    circleMouseover: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n    circleMouseup: Observable<google.maps.MouseEvent>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n    radiusChanged: Observable<void>;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n    circleRightclick: Observable<google.maps.MouseEvent>;\n    constructor(_map: GoogleMap, _ngZone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds(): google.maps.LatLngBounds;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter(): google.maps.LatLng;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable(): boolean;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable(): boolean;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getRadius(): number;\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible(): boolean;\n    private _combineOptions;\n    private _watchForOptionsChanges;\n    private _watchForCenterChanges;\n    private _watchForRadiusChanges;\n    private _assertInitialized;\n}\n"]}