{"version":3,"file":"google-maps.js","sources":["../../../../../../src/google-maps/map-event-manager.ts","../../../../../../src/google-maps/google-map/google-map.ts","../../../../../../src/google-maps/map-base-layer.ts","../../../../../../src/google-maps/map-bicycling-layer/map-bicycling-layer.ts","../../../../../../src/google-maps/map-circle/map-circle.ts","../../../../../../src/google-maps/map-ground-overlay/map-ground-overlay.ts","../../../../../../src/google-maps/map-info-window/map-info-window.ts","../../../../../../src/google-maps/map-kml-layer/map-kml-layer.ts","../../../../../../src/google-maps/map-marker/map-marker.ts","../../../../../../src/google-maps/map-polygon/map-polygon.ts","../../../../../../src/google-maps/map-polyline/map-polyline.ts","../../../../../../src/google-maps/map-rectangle/map-rectangle.ts","../../../../../../src/google-maps/map-traffic-layer/map-traffic-layer.ts","../../../../../../src/google-maps/map-transit-layer/map-transit-layer.ts","../../../../../../src/google-maps/google-maps-module.ts","../../../../../../src/google-maps/public-api.ts","../../../../../../src/google-maps/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {Observable, Subscriber} from 'rxjs';\n\ntype MapEventManagerTarget = {\n  addListener: (name: string, callback: (...args: any[]) => void) => google.maps.MapsEventListener;\n} | undefined;\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nexport class MapEventManager {\n  /** Pending listeners that were added before the target was set. */\n  private _pending: {observable: Observable<any>, observer: Subscriber<any>}[] = [];\n  private _listeners: google.maps.MapsEventListener[] = [];\n  private _target: MapEventManagerTarget;\n\n  /** Clears all currently-registered event listeners. */\n  private _clearListeners() {\n    for (let listener of this._listeners) {\n      listener.remove();\n    }\n\n    this._listeners = [];\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter<T>(name: string): Observable<T> {\n    const observable = new Observable<T>(observer => {\n      // If the target hasn't been initialized yet, cache the observer so it can be added later.\n      if (!this._target) {\n        this._pending.push({observable, observer});\n        return undefined;\n      }\n\n      const listener = this._target.addListener(name, (event: T) => {\n        this._ngZone.run(() => observer.next(event));\n      });\n      this._listeners.push(listener);\n      return () => listener.remove();\n    });\n\n    return observable;\n  }\n\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target: MapEventManagerTarget) {\n    if (target === this._target) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (this._target) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._target = target;\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._target = undefined;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  NgZone,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, shareReplay, take, takeUntil} from 'rxjs/operators';\nimport {MapEventManager} from '../map-event-manager';\n\ninterface GoogleMapsWindow extends Window {\n  google?: typeof google;\n}\n\n/** default options set to the Googleplex */\nexport const DEFAULT_OPTIONS: google.maps.MapOptions = {\n  center: {lat: 37.421995, lng: -122.084092},\n  zoom: 17\n};\n\n/** Arbitrary default height for the map element */\nexport const DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nexport const DEFAULT_WIDTH = '500px';\n\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n@Component({\n  selector: 'google-map',\n  exportAs: 'googleMap',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoogleMap implements OnChanges, OnInit, OnDestroy {\n  private _eventManager: MapEventManager = new MapEventManager(this._ngZone);\n  private _googleMapChanges: Observable<google.maps.Map>;\n\n  private readonly _options = new BehaviorSubject<google.maps.MapOptions>(DEFAULT_OPTIONS);\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _zoom = new BehaviorSubject<number|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n  private _mapEl: HTMLElement;\n\n  /**\n   * The underlying google.maps.Map object\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#Map\n   */\n  googleMap?: google.maps.Map;\n\n  /** Whether we're currently rendering inside a browser. */\n  _isBrowser: boolean;\n\n  /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n  @Input() height: string | number | null = DEFAULT_HEIGHT;\n\n  /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n  @Input() width: string | number | null = DEFAULT_WIDTH;\n\n  /**\n   * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n   */\n  @Input() mapTypeId: google.maps.MapTypeId | undefined;\n\n  @Input()\n  set center(center: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._center.next(center);\n  }\n  @Input()\n  set zoom(zoom: number) {\n    this._zoom.next(zoom);\n  }\n  @Input()\n  set options(options: google.maps.MapOptions) {\n    this._options.next(options || DEFAULT_OPTIONS);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n   */\n  @Output()\n  boundsChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n   */\n  @Output()\n  centerChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MouseEvent|google.maps.IconMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent|google.maps.IconMouseEvent>('click');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n   */\n  @Output() mapDrag: Observable<void> = this._eventManager.getLazyEmitter<void>('drag');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n   */\n  @Output() mapDragend: Observable<void> = this._eventManager.getLazyEmitter<void>('dragend');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n   */\n  @Output() mapDragstart: Observable<void> = this._eventManager.getLazyEmitter<void>('dragstart');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n   */\n  @Output()\n  headingChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('heading_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n   */\n  @Output() idle: Observable<void> = this._eventManager.getLazyEmitter<void>('idle');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n   */\n  @Output()\n  maptypeidChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('maptypeid_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n   */\n  @Output()\n  mapMousemove: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousemove');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n   */\n  @Output()\n  mapMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n   */\n  @Output()\n  mapMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n   */\n  @Output()\n  projectionChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('projection_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n   */\n  @Output()\n  mapRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n   */\n  @Output() tilesloaded: Observable<void> = this._eventManager.getLazyEmitter<void>('tilesloaded');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n   */\n  @Output() tiltChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('tilt_changed');\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n   */\n  @Output() zoomChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zoom_changed');\n\n  constructor(\n    private readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    /**\n     * @deprecated `platformId` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    @Optional() @Inject(PLATFORM_ID) platformId?: Object) {\n\n    // @breaking-change 10.0.0 Remove null check for `platformId`.\n    this._isBrowser =\n        platformId ? isPlatformBrowser(platformId) : typeof window === 'object' && !!window;\n\n    if (this._isBrowser) {\n      const googleMapsWindow: GoogleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\n            'Namespace google not found, cannot construct embedded google ' +\n            'map. Please install the Google Maps JavaScript API: ' +\n            'https://developers.google.com/maps/documentation/javascript/' +\n            'tutorial#Loading_the_Maps_API');\n      }\n    }\n  }\n\n  ngOnChanges() {\n    this._setSize();\n    if (this.googleMap && this.mapTypeId) {\n      this.googleMap.setMapTypeId(this.mapTypeId);\n    }\n  }\n\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container')!;\n      this._setSize();\n      this._googleMapChanges = this._initializeMap(this._combineOptions());\n      this._googleMapChanges.subscribe((googleMap: google.maps.Map) => {\n        this.googleMap = googleMap;\n        this._eventManager.setTarget(this.googleMap);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForZoomChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(\n      bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x: number, y: number) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(\n      latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,\n      padding?: number|google.maps.Padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds|null {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons(): boolean {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading(): number {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId(): google.maps.MapTypeId|string {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection(): google.maps.Projection|null {\n    this._assertInitialized();\n    return this.googleMap.getProjection();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView(): google.maps.StreetViewPanorama {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt(): number {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom(): number {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls(): google.maps.MVCArray<Node>[] {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data(): google.maps.Data {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes(): google.maps.MapTypeRegistry {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType> {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n\n  private _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height =\n          this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n      styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n    }\n  }\n\n  /** Combines the center and zoom and the other map options into a single object */\n  private _combineOptions(): Observable<google.maps.MapOptions> {\n    return combineLatest([this._options, this._center, this._zoom])\n        .pipe(map(([options, center, zoom]) => {\n          const combinedOptions: google.maps.MapOptions = {\n            ...options,\n            // It's important that we set **some** kind of `center`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: center || options.center || DEFAULT_OPTIONS.center,\n            zoom: zoom !== undefined ? zoom : options.zoom,\n            mapTypeId: this.mapTypeId\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _initializeMap(optionsChanges: Observable<google.maps.MapOptions>):\n      Observable<google.maps.Map> {\n    return optionsChanges.pipe(\n        take(1),\n        map(options => {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          return this._ngZone.runOutsideAngular(() => new google.maps.Map(this._mapEl, options));\n        }),\n        shareReplay(1));\n  }\n\n  private _watchForOptionsChanges() {\n    combineLatest([this._googleMapChanges, this._options])\n        .pipe(takeUntil(this._destroy))\n        .subscribe(([googleMap, options]) => {\n          googleMap.setOptions(options);\n        });\n  }\n\n  private _watchForCenterChanges() {\n    combineLatest([this._googleMapChanges, this._center])\n        .pipe(takeUntil(this._destroy))\n        .subscribe(([googleMap, center]) => {\n          if (center) {\n            googleMap.setCenter(center);\n          }\n        });\n  }\n\n  private _watchForZoomChanges() {\n    combineLatest([this._googleMapChanges, this._zoom])\n        .pipe(takeUntil(this._destroy))\n        .subscribe(([googleMap, zoom]) => {\n          if (zoom !== undefined) {\n            googleMap.setZoom(zoom);\n          }\n        });\n  }\n\n  /** Asserts that the map has been initialized. */\n  private _assertInitialized(): asserts this is {googleMap: google.maps.Map} {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                  'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n}\n\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, NgZone, OnDestroy, OnInit} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\n\n@Directive({\n  selector: 'map-base-layer',\n  exportAs: 'mapBaseLayer',\n})\nexport class MapBaseLayer implements OnInit, OnDestroy {\n  constructor(protected readonly _map: GoogleMap, protected readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n\n  private _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n\n  protected _initializeObject() {}\n  protected _setMap() {}\n  protected _unsetMap() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n@Directive({\n  selector: 'map-bicycling-layer',\n  exportAs: 'mapBicyclingLayer',\n})\nexport class MapBicyclingLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.BicyclingLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n   */\n  bicyclingLayer?: google.maps.BicyclingLayer;\n\n  protected _initializeObject() {\n    this.bicyclingLayer = new google.maps.BicyclingLayer();\n  }\n\n  protected _setMap() {\n    this._assertLayerInitialized();\n    this.bicyclingLayer.setMap(this._map.googleMap!);\n  }\n\n  protected _unsetMap() {\n    if (this.bicyclingLayer) {\n      this.bicyclingLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {bicyclingLayer: google.maps.BicyclingLayer} {\n    if (!this.bicyclingLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n@Directive({\n  selector: 'map-circle',\n  exportAs: 'mapCircle',\n})\nexport class MapCircle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.CircleOptions>({});\n  private readonly _center =\n      new BehaviorSubject<google.maps.LatLng|google.maps.LatLngLiteral|undefined>(undefined);\n  private readonly _radius = new BehaviorSubject<number|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * Underlying google.maps.Circle object.\n   *\n   * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n   */\n  circle?: google.maps.Circle;  // initialized in ngOnInit\n\n  @Input()\n  set options(options: google.maps.CircleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set center(center: google.maps.LatLng|google.maps.LatLngLiteral) {\n    this._center.next(center);\n  }\n\n  @Input()\n  set radius(radius: number) {\n    this._radius.next(radius);\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n   */\n  @Output()\n  centerChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('center_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n   */\n  @Output()\n  circleClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n   */\n  @Output()\n  circleDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n   */\n  @Output()\n  circleDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n   */\n  @Output()\n  circleDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n   */\n  @Output()\n  circleDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n   */\n  @Output()\n  circleMousedown: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousedown');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n   */\n  @Output()\n  circleMousemove: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousemove');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n   */\n  @Output()\n  circleMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n   */\n  @Output()\n  circleMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n   */\n  @Output()\n  circleMouseup: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseup');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n   */\n  @Output()\n  radiusChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('radius_changed');\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n   */\n  @Output()\n  circleRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.circle = new google.maps.Circle(options);\n        });\n        this._assertInitialized();\n        this.circle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.circle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.circle) {\n      this.circle.setMap(null);\n    }\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter(): google.maps.LatLng {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getRadius(): number {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.CircleOptions> {\n    return combineLatest([this._options, this._center, this._radius])\n        .pipe(map(([options, center, radius]) => {\n          const combinedOptions: google.maps.CircleOptions = {\n            ...options,\n            center: center || options.center,\n            radius: radius !== undefined ? radius : options.radius,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n\n  private _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n\n  private _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {circle: google.maps.Circle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.circle) {\n        throw Error(\n          'Cannot interact with a Google Map Circle before it has been ' +\n          'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n@Directive({\n  selector: 'map-ground-overlay',\n  exportAs: 'mapGroundOverlay',\n})\nexport class MapGroundOverlay implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n\n  private readonly _opacity = new BehaviorSubject<number>(1);\n  private readonly _url = new BehaviorSubject<string>('');\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.GroundOverlay object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n   */\n  groundOverlay?: google.maps.GroundOverlay;\n\n  /** URL of the image that will be shown in the overlay. */\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /** Bounds for the overlay. */\n  @Input() bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;\n\n  /** Whether the overlay is clickable */\n  @Input() clickable: boolean = false;\n\n  /** Opacity of the overlay. */\n  @Input()\n  set opacity(opacity: number) {\n    this._opacity.next(opacity);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!this.bounds && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Image bounds are required');\n    }\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.groundOverlay =\n              new google.maps.GroundOverlay(this._url.getValue(), this.bounds, options);\n        });\n        this._assertInitialized();\n        this.groundOverlay.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.groundOverlay);\n      });\n\n      this._watchForOpacityChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.groundOverlay) {\n      this.groundOverlay.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity(): number {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n\n  private _combineOptions(): Observable<google.maps.GroundOverlayOptions> {\n    return this._opacity.pipe(map(opacity => {\n      const combinedOptions: google.maps.GroundOverlayOptions = {\n        clickable: this.clickable,\n        opacity,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity) {\n        this._assertInitialized();\n        this.groundOverlay.setOpacity(opacity);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      this._assertInitialized();\n      const overlay = this.groundOverlay;\n      overlay.set('url', url);\n\n      // Google Maps only redraws the overlay if we re-set the map.\n      overlay.setMap(null);\n      overlay.setMap(this._map.googleMap!);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {groundOverlay: google.maps.GroundOverlay} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.groundOverlay) {\n        throw Error(\n            'Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n            'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n@Directive({\n  selector: 'map-info-window',\n  exportAs: 'mapInfoWindow',\n  host: {'style': 'display: none'},\n})\nexport class MapInfoWindow implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.InfoWindowOptions>({});\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * Underlying google.maps.InfoWindow\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n   */\n  infoWindow?: google.maps.InfoWindow;\n\n  @Input()\n  set options(options: google.maps.InfoWindowOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n   */\n  @Output() closeclick: Observable<void> = this._eventManager.getLazyEmitter<void>('closeclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.content_changed\n   */\n  @Output()\n  contentChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('content_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n   */\n  @Output() domready: Observable<void> = this._eventManager.getLazyEmitter<void>('domready');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.position_changed\n   */\n  @Output()\n  positionChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.zindex_changed\n   */\n  @Output()\n  zindexChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  constructor(private readonly _googleMap: GoogleMap,\n              private _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      const combinedOptionsChanges = this._combineOptions();\n\n      combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.infoWindow = new google.maps.InfoWindow(options);\n        });\n\n        this._eventManager.setTarget(this.infoWindow);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent(): string|Node {\n    this._assertInitialized();\n    return this.infoWindow.getContent();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.infoWindow.getPosition();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor?: MapAnchorPoint) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n\n    // Prevent the info window from initializing if trying to reopen on the same anchor.\n    if (this.infoWindow.get('anchor') !== anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.InfoWindowOptions> {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions: google.maps.InfoWindowOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {infoWindow: google.maps.InfoWindow} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.infoWindow) {\n        throw Error(\n            'Cannot interact with a Google Map Info Window before it has been ' +\n            'initialized. Please wait for the Info Window to load before trying to interact with ' +\n            'it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n@Directive({\n  selector: 'map-kml-layer',\n  exportAs: 'mapKmlLayer',\n})\nexport class MapKmlLayer implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.KmlLayerOptions>({});\n  private readonly _url = new BehaviorSubject<string>('');\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.KmlLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n   */\n  kmlLayer?: google.maps.KmlLayer;\n\n  @Input()\n  set options(options: google.maps.KmlLayerOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set url(url: string) {\n    this._url.next(url);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n   */\n  @Output()\n  kmlClick: Observable<google.maps.KmlMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.KmlMouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml\n   * #KmlLayer.defaultviewport_changed\n   */\n  @Output()\n  defaultviewportChanged: Observable<void> =\n      this._eventManager.getLazyEmitter<void>('defaultviewport_changed');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n   */\n  @Output()\n  statusChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('status_changed');\n\n  constructor(private readonly _map: GoogleMap, private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n        this._assertInitialized();\n        this.kmlLayer.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.kmlLayer);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.kmlLayer) {\n      this.kmlLayer.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata(): google.maps.KmlLayerMetadata {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus(): google.maps.KmlLayerStatus {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl(): string {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex(): number {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n\n  private _combineOptions(): Observable<google.maps.KmlLayerOptions> {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions: google.maps.KmlLayerOptions = {\n        ...options,\n        url: url || options.url,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is { kmlLayer: google.maps.KmlLayer } {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.kmlLayer) {\n        throw Error(\n            'Cannot interact with a Google Map KmlLayer before it has been ' +\n            'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Input, OnDestroy, OnInit, Output, NgZone, Directive} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\nimport {MapAnchorPoint} from '../map-anchor-point';\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nexport const DEFAULT_MARKER_OPTIONS = {\n  position: {lat: 37.421995, lng: -122.084092},\n};\n\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n@Directive({\n  selector: 'map-marker',\n  exportAs: 'mapMarker',\n})\nexport class MapMarker implements OnInit, OnDestroy, MapAnchorPoint {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options =\n      new BehaviorSubject<google.maps.MarkerOptions>(DEFAULT_MARKER_OPTIONS);\n  private readonly _title = new BehaviorSubject<string|undefined>(undefined);\n  private readonly _position =\n      new BehaviorSubject<google.maps.LatLngLiteral|google.maps.LatLng|undefined>(undefined);\n  private readonly _label =\n      new BehaviorSubject<string|google.maps.MarkerLabel|undefined>(undefined);\n  private readonly _clickable = new BehaviorSubject<boolean|undefined>(undefined);\n  private readonly _destroy = new Subject<void>();\n\n  @Input()\n  set options(options: google.maps.MarkerOptions) {\n    this._options.next(options || DEFAULT_MARKER_OPTIONS);\n  }\n\n  @Input()\n  set title(title: string) {\n    this._title.next(title);\n  }\n\n  @Input()\n  set position(position: google.maps.LatLngLiteral|google.maps.LatLng) {\n    this._position.next(position);\n  }\n\n  @Input()\n  set label(label: string|google.maps.MarkerLabel) {\n    this._label.next(label);\n  }\n\n  @Input()\n  set clickable(clickable: boolean) {\n    this._clickable.next(clickable);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n   */\n  @Output()\n  animationChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('animation_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n   */\n  @Output()\n  mapClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n   */\n  @Output()\n  clickableChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('clickable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n   */\n  @Output()\n  cursorChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('cursor_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n   */\n  @Output()\n  mapDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n   */\n  @Output()\n  mapDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n   */\n  @Output()\n  mapDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n   */\n  @Output()\n  draggableChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('draggable_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n   */\n  @Output()\n  mapDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n   */\n  @Output() flatChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('flat_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n   */\n  @Output() iconChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('icon_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n   */\n  @Output()\n  mapMousedown: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n   */\n  @Output()\n  mapMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n   */\n  @Output()\n  mapMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n   */\n  @Output()\n  mapMouseup: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n   */\n  @Output()\n  positionChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('position_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n   */\n  @Output()\n  mapRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n   */\n  @Output() shapeChanged:\n  Observable<void> = this._eventManager.getLazyEmitter<void>('shape_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n   */\n  @Output()\n  titleChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('title_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n   */\n  @Output()\n  visibleChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('visible_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n   */\n  @Output()\n  zindexChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('zindex_changed');\n\n  /**\n   * The underlying google.maps.Marker object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n   */\n  marker?: google.maps.Marker;\n\n  constructor(\n    private readonly _googleMap: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.marker = new google.maps.Marker(options));\n        this._assertInitialized();\n        this.marker.setMap(this._googleMap.googleMap!);\n        this._eventManager.setTarget(this.marker);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForTitleChanges();\n      this._watchForPositionChanges();\n      this._watchForLabelChanges();\n      this._watchForClickableChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation(): google.maps.Animation|null {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable(): boolean {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor(): string|null {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon(): string|google.maps.Icon|google.maps.Symbol|null {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel(): google.maps.MarkerLabel|null {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity(): number|null {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition(): google.maps.LatLng|null {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape(): google.maps.MarkerShape|null {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle(): string|null {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex(): number|null {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor(): google.maps.MVCObject {\n    this._assertInitialized();\n    return this.marker;\n  }\n\n  private _combineOptions(): Observable<google.maps.MarkerOptions> {\n    return combineLatest([this._options, this._title, this._position, this._label, this._clickable])\n        .pipe(map(([options, title, position, label, clickable]) => {\n          const combinedOptions: google.maps.MarkerOptions = {\n            ...options,\n            title: title || options.title,\n            position: position || options.position,\n            label: label || options.label,\n            clickable: clickable !== undefined ? clickable : options.clickable,\n            map: this._googleMap.googleMap,\n          };\n          return combinedOptions;\n        }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      if (this.marker) {\n        this._assertInitialized();\n        this.marker.setOptions(options);\n      }\n    });\n  }\n\n  private _watchForTitleChanges() {\n    this._title.pipe(takeUntil(this._destroy)).subscribe(title => {\n      if (this.marker && title !== undefined) {\n        this._assertInitialized();\n        this.marker.setTitle(title);\n      }\n    });\n  }\n\n  private _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (this.marker && position) {\n        this._assertInitialized();\n        this.marker.setPosition(position);\n      }\n    });\n  }\n\n  private _watchForLabelChanges() {\n    this._label.pipe(takeUntil(this._destroy)).subscribe(label => {\n      if (this.marker && label !== undefined) {\n        this._assertInitialized();\n        this.marker.setLabel(label);\n      }\n    });\n  }\n\n  private _watchForClickableChanges() {\n    this._clickable.pipe(takeUntil(this._destroy)).subscribe(clickable => {\n      if (this.marker && clickable !== undefined) {\n        this._assertInitialized();\n        this.marker.setClickable(clickable);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {marker: google.maps.Marker} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._googleMap.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.marker) {\n        throw Error(\n            'Cannot interact with a Google Map Marker before it has been ' +\n            'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n@Directive({\n  selector: 'map-polygon',\n  exportAs: 'mapPolygon',\n})\nexport class MapPolygon implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolygonOptions>({});\n  private readonly _paths =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n                          google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polygon object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n   */\n  polygon?: google.maps.Polygon;\n\n  @Input()\n  set options(options: google.maps.PolygonOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set paths(paths: google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>>|\n            google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n            google.maps.LatLngLiteral[]) {\n    this._paths.next(paths);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n   */\n  @Output()\n  polygonClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n   */\n  @Output()\n  polygonDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n   */\n  @Output()\n  polygonDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n   */\n  @Output()\n  polygonDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n   */\n  @Output()\n  polygonDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n   */\n  @Output()\n  polygonMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n   */\n  @Output()\n  polygonMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n   */\n  @Output()\n  polygonMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n   */\n  @Output()\n  polygonMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n   */\n  @Output()\n  polygonMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n   */\n  @Output()\n  polygonRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.polygon = new google.maps.Polygon(options);\n        });\n        this._assertInitialized();\n        this.polygon.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polygon);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths(): google.maps.MVCArray<google.maps.MVCArray<google.maps.LatLng>> {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolygonOptions> {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions: google.maps.PolygonOptions = {\n        ...options,\n        paths: paths || options.paths,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polygon: google.maps.Polygon} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polygon) {\n        throw Error(\n            'Cannot interact with a Google Map Polygon before it has been ' +\n            'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n@Directive({\n  selector: 'map-polyline',\n  exportAs: 'mapPolyline',\n})\nexport class MapPolyline implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.PolylineOptions>({});\n  private readonly _path =\n      new BehaviorSubject<google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n                          google.maps.LatLngLiteral[]|undefined>(undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Polyline object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n   */\n  polyline?: google.maps.Polyline;\n\n  @Input()\n  set options(options: google.maps.PolylineOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set path(path: google.maps.MVCArray<google.maps.LatLng>|google.maps.LatLng[]|\n           google.maps.LatLngLiteral[]) {\n    this._path.next(path);\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n   */\n  @Output()\n  polylineClick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('click');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n   */\n  @Output()\n  polylineDblclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('dblclick');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n   */\n  @Output()\n  polylineDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n   */\n  @Output()\n  polylineDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n   */\n  @Output()\n  polylineDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n   */\n  @Output()\n  polylineMousedown: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousedown');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n   */\n  @Output()\n  polylineMousemove: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mousemove');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n   */\n  @Output()\n  polylineMouseout: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseout');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n   */\n  @Output()\n  polylineMouseover: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseover');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n   */\n  @Output()\n  polylineMouseup: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('mouseup');\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n   */\n  @Output()\n  polylineRightclick: Observable<google.maps.PolyMouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.PolyMouseEvent>('rightclick');\n\n  constructor(\n    private readonly _map: GoogleMap,\n    private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n        this._assertInitialized();\n        this.polyline.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.polyline);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.polyline) {\n      this.polyline.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath(): google.maps.MVCArray<google.maps.LatLng> {\n    this._assertInitialized();\n    // @breaking-change 11.0.0 Make the return value nullable.\n    return this.polyline.getPath();\n  }\n\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.PolylineOptions> {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions: google.maps.PolylineOptions = {\n        ...options,\n        path: path || options.path,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n\n  private _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {polyline: google.maps.Polyline} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.polyline) {\n        throw Error(\n            'Cannot interact with a Google Map Polyline before it has been ' +\n            'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, OnDestroy, OnInit, Output, NgZone} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\nimport {MapEventManager} from '../map-event-manager';\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n@Directive({\n  selector: 'map-rectangle',\n  exportAs: 'mapRectangle',\n})\nexport class MapRectangle implements OnInit, OnDestroy {\n  private _eventManager = new MapEventManager(this._ngZone);\n  private readonly _options = new BehaviorSubject<google.maps.RectangleOptions>({});\n  private readonly _bounds =\n      new BehaviorSubject<google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|undefined>(\n          undefined);\n\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.Rectangle object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n   */\n  rectangle?: google.maps.Rectangle;\n\n  @Input()\n  set options(options: google.maps.RectangleOptions) {\n    this._options.next(options || {});\n  }\n\n  @Input()\n  set bounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral) {\n    this._bounds.next(bounds);\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n   */\n  @Output()\n  boundsChanged: Observable<void> = this._eventManager.getLazyEmitter<void>('bounds_changed');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n   */\n  @Output()\n  rectangleClick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('click');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n   */\n  @Output()\n  rectangleDblclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dblclick');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n   */\n  @Output()\n  rectangleDrag: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('drag');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n   */\n  @Output()\n  rectangleDragend: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragend');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n   */\n  @Output()\n  rectangleDragstart: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('dragstart');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n   */\n  @Output()\n  rectangleMousedown: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousedown');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n   */\n  @Output()\n  rectangleMousemove: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mousemove');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n   */\n  @Output()\n  rectangleMouseout: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseout');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n   */\n  @Output()\n  rectangleMouseover: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseover');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n   */\n  @Output()\n  rectangleMouseup: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('mouseup');\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n   */\n  @Output()\n  rectangleRightclick: Observable<google.maps.MouseEvent> =\n      this._eventManager.getLazyEmitter<google.maps.MouseEvent>('rightclick');\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n          this.rectangle = new google.maps.Rectangle(options);\n        });\n        this._assertInitialized();\n        this.rectangle.setMap(this._map.googleMap!);\n        this._eventManager.setTarget(this.rectangle);\n      });\n\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.rectangle) {\n      this.rectangle.setMap(null);\n    }\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds(): google.maps.LatLngBounds {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible(): boolean {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n\n  private _combineOptions(): Observable<google.maps.RectangleOptions> {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions: google.maps.RectangleOptions = {\n        ...options,\n        bounds: bounds || options.bounds,\n      };\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n\n  private _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n\n  private _assertInitialized(): asserts this is {rectangle: google.maps.Rectangle} {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._map.googleMap) {\n        throw Error(\n            'Cannot access Google Map information before the API has been initialized. ' +\n            'Please wait for the API to load before trying to interact with it.');\n      }\n      if (!this.rectangle) {\n        throw Error(\n            'Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n            'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {GoogleMap} from '../google-map/google-map';\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n@Directive({\n  selector: 'map-traffic-layer',\n  exportAs: 'mapTrafficLayer',\n})\nexport class MapTrafficLayer implements OnInit, OnDestroy {\n  private readonly _autoRefresh = new BehaviorSubject<boolean>(true);\n  private readonly _destroyed = new Subject<void>();\n\n  /**\n   * The underlying google.maps.TrafficLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n   */\n  trafficLayer?: google.maps.TrafficLayer;\n\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  @Input()\n  set autoRefresh(autoRefresh: boolean) {\n    this._autoRefresh.next(autoRefresh);\n  }\n\n  constructor(private readonly _map: GoogleMap, private readonly _ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        // Create the object outside the zone so its events don't trigger change detection.\n        this._ngZone.runOutsideAngular(() => {\n          this.trafficLayer = new google.maps.TrafficLayer(options);\n        });\n        this._assertInitialized();\n        this.trafficLayer.setMap(this._map.googleMap!);\n      });\n\n      this._watchForAutoRefreshChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    if (this.trafficLayer) {\n      this.trafficLayer.setMap(null);\n    }\n  }\n\n  private _combineOptions(): Observable<google.maps.TrafficLayerOptions> {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions: google.maps.TrafficLayerOptions = {autoRefresh};\n      return combinedOptions;\n    }));\n  }\n\n  private _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n\n  private _assertInitialized(): asserts this is {trafficLayer: google.maps.TrafficLayer} {\n    if (!this._map.googleMap) {\n      throw Error(\n          'Cannot access Google Map information before the API has been initialized. ' +\n          'Please wait for the API to load before trying to interact with it.');\n    }\n    if (!this.trafficLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n          'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"googlemaps\" />\n\nimport {Directive} from '@angular/core';\n\nimport {MapBaseLayer} from '../map-base-layer';\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n@Directive({\n  selector: 'map-transit-layer',\n  exportAs: 'mapTransitLayer',\n})\nexport class MapTransitLayer extends MapBaseLayer {\n  /**\n   * The underlying google.maps.TransitLayer object.\n   *\n   * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n   */\n  transitLayer?: google.maps.TransitLayer;\n\n  protected _initializeObject() {\n    this.transitLayer = new google.maps.TransitLayer();\n  }\n\n  protected _setMap() {\n    this._assertLayerInitialized();\n    this.transitLayer.setMap(this._map.googleMap!);\n  }\n\n  protected _unsetMap() {\n    if (this.transitLayer) {\n      this.transitLayer.setMap(null);\n    }\n  }\n\n  private _assertLayerInitialized(): asserts this is {transitLayer: google.maps.TransitLayer} {\n    if (!this.transitLayer) {\n      throw Error(\n          'Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n          'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {GoogleMap} from './google-map/google-map';\nimport {MapBaseLayer} from './map-base-layer';\nimport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nimport {MapCircle} from './map-circle/map-circle';\nimport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nimport {MapInfoWindow} from './map-info-window/map-info-window';\nimport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nimport {MapMarker} from './map-marker/map-marker';\nimport {MapPolygon} from './map-polygon/map-polygon';\nimport {MapPolyline} from './map-polyline/map-polyline';\nimport {MapRectangle} from './map-rectangle/map-rectangle';\nimport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nimport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\n\nconst COMPONENTS = [\n  GoogleMap,\n  MapBaseLayer,\n  MapBicyclingLayer,\n  MapCircle,\n  MapGroundOverlay,\n  MapInfoWindow,\n  MapKmlLayer,\n  MapMarker,\n  MapPolygon,\n  MapPolyline,\n  MapRectangle,\n  MapTrafficLayer,\n  MapTransitLayer,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class GoogleMapsModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {GoogleMap} from './google-map/google-map';\nexport {GoogleMapsModule} from './google-maps-module';\nexport {MapAnchorPoint} from './map-anchor-point';\nexport {MapBaseLayer} from './map-base-layer';\nexport {MapBicyclingLayer} from './map-bicycling-layer/map-bicycling-layer';\nexport {MapCircle} from './map-circle/map-circle';\nexport {MapGroundOverlay} from './map-ground-overlay/map-ground-overlay';\nexport {MapInfoWindow} from './map-info-window/map-info-window';\nexport {MapKmlLayer} from './map-kml-layer/map-kml-layer';\nexport {MapMarker} from './map-marker/map-marker';\nexport {MapPolygon} from './map-polygon/map-polygon';\nexport {MapPolyline} from './map-polyline/map-polyline';\nexport {MapRectangle} from './map-rectangle/map-rectangle';\nexport {MapTrafficLayer} from './map-traffic-layer/map-traffic-layer';\nexport {MapTransitLayer} from './map-transit-layer/map-transit-layer';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}