{"version":3,"file":"info-window-manager.d.ts","sources":["info-window-manager.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/// <reference types=\"googlemaps\" />\nimport { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AgmInfoWindow } from '../../directives/info-window';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\nexport declare class InfoWindowManager {\n    private _mapsWrapper;\n    private _zone;\n    private _markerManager;\n    private _infoWindows;\n    constructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone, _markerManager: MarkerManager);\n    deleteInfoWindow(infoWindow: AgmInfoWindow): Promise<void>;\n    setPosition(infoWindow: AgmInfoWindow): Promise<void>;\n    setZIndex(infoWindow: AgmInfoWindow): Promise<void>;\n    open(infoWindow: AgmInfoWindow): Promise<void>;\n    close(infoWindow: AgmInfoWindow): Promise<void>;\n    setOptions(infoWindow: AgmInfoWindow, options: google.maps.InfoWindowOptions): Promise<void>;\n    addInfoWindow(infoWindow: AgmInfoWindow): void;\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable<T>(eventName: string, infoWindow: AgmInfoWindow): Observable<T>;\n}\n"]}