{"version":3,"file":"circle-manager.d.ts","sources":["circle-manager.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/// <reference types=\"googlemaps\" />\nimport { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AgmCircle } from '../../directives/circle';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nexport declare class CircleManager {\n    private _apiWrapper;\n    private _zone;\n    private _circles;\n    constructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone);\n    addCircle(circle: AgmCircle): void;\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle: AgmCircle): Promise<void>;\n    setOptions(circle: AgmCircle, options: google.maps.CircleOptions): Promise<void>;\n    getBounds(circle: AgmCircle): Promise<google.maps.LatLngBounds>;\n    getCenter(circle: AgmCircle): Promise<google.maps.LatLng>;\n    getRadius(circle: AgmCircle): Promise<number>;\n    setCenter(circle: AgmCircle): Promise<void>;\n    setEditable(circle: AgmCircle): Promise<void>;\n    setDraggable(circle: AgmCircle): Promise<void>;\n    setVisible(circle: AgmCircle): Promise<void>;\n    setRadius(circle: AgmCircle): Promise<void>;\n    getNativeCircle(circle: AgmCircle): Promise<google.maps.Circle>;\n    createEventObservable<T>(eventName: string, circle: AgmCircle): Observable<T>;\n}\n"]}