{"version":3,"file":"data-layer-manager.d.ts","sources":["data-layer-manager.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/// <reference types=\"googlemaps\" />\nimport { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AgmDataLayer } from './../../directives/data-layer';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nexport declare class DataLayerManager {\n    private _wrapper;\n    private _zone;\n    private _layers;\n    constructor(_wrapper: GoogleMapsAPIWrapper, _zone: NgZone);\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer: AgmDataLayer): void;\n    deleteDataLayer(layer: AgmDataLayer): void;\n    updateGeoJson(layer: AgmDataLayer, geoJson: object | string): void;\n    setDataOptions(layer: AgmDataLayer, options: google.maps.Data.DataOptions): void;\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable<T>(eventName: string, layer: AgmDataLayer): Observable<T>;\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d: google.maps.Data, geoJson: object | string): Promise<google.maps.Data.Feature[]>;\n}\n"]}