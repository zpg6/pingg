{"version":3,"file":"lazy-maps-api-loader.d.ts","sources":["lazy-maps-api-loader.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { MapsAPILoader } from './maps-api-loader';\nexport declare enum GoogleMapsScriptProtocol {\n    HTTP = 1,\n    HTTPS = 2,\n    AUTO = 3\n}\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nexport declare const LAZY_MAPS_API_CONFIG: InjectionToken<LazyMapsAPILoaderConfigLiteral>;\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface LazyMapsAPILoaderConfigLiteral {\n    /**\n     * The Google Maps API Key (see:\n     * https://developers.google.com/maps/documentation/javascript/get-api-key)\n     */\n    apiKey?: string;\n    /**\n     * The Google Maps client ID (for premium plans).\n     * When you have a Google Maps APIs Premium Plan license, you must authenticate\n     * your application with either an API key or a client ID.\n     * The Google Maps API will fail to load if both a client ID and an API key are included.\n     */\n    clientId?: string;\n    /**\n     * The Google Maps channel name (for premium plans).\n     * A channel parameter is an optional parameter that allows you to track usage under your client\n     * ID by assigning a distinct channel to each of your applications.\n     */\n    channel?: string;\n    /**\n     * Google Maps API version.\n     */\n    apiVersion?: string;\n    /**\n     * Host and Path used for the `<script>` tag.\n     */\n    hostAndPath?: string;\n    /**\n     * Protocol used for the `<script>` tag.\n     */\n    protocol?: GoogleMapsScriptProtocol;\n    /**\n     * Defines which Google Maps libraries should get loaded.\n     */\n    libraries?: string[];\n    /**\n     * The default bias for the map behavior is US.\n     * If you wish to alter your application to serve different map tiles or bias the\n     * application, you can overwrite the default behavior (US) by defining a `region`.\n     * See https://developers.google.com/maps/documentation/javascript/basics#Region\n     */\n    region?: string;\n    /**\n     * The Google Maps API uses the browser's preferred language when displaying\n     * textual information. If you wish to overwrite this behavior and force the API\n     * to use a given language, you can use this setting.\n     * See https://developers.google.com/maps/documentation/javascript/basics#Language\n     */\n    language?: string;\n}\nexport declare class LazyMapsAPILoader extends MapsAPILoader {\n    private localeId;\n    protected _scriptLoadingPromise: Promise<void>;\n    protected _config: LazyMapsAPILoaderConfigLiteral;\n    protected _windowRef: WindowRef;\n    protected _documentRef: DocumentRef;\n    protected readonly _SCRIPT_ID: string;\n    protected readonly callbackName: string;\n    constructor(config: any, w: WindowRef, d: DocumentRef, localeId: string);\n    load(): Promise<void>;\n    private _assignScriptLoadingPromise;\n    protected _getScriptSrc(callbackName: string): string;\n}\n"]}