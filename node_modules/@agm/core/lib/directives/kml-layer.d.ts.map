{"version":3,"file":"kml-layer.d.ts","sources":["kml-layer.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/// <reference types=\"googlemaps\" />\nimport { EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\nexport declare class AgmKmlLayer implements OnInit, OnDestroy, OnChanges {\n    private _manager;\n    private _addedToManager;\n    private _id;\n    private _subscriptions;\n    private static _kmlLayerOptions;\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     */\n    clickable: boolean;\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the\n     * layer.\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n     * were never set.\n     */\n    preserveViewport: boolean;\n    /**\n     * Whether to render the screen overlays. Default true.\n     */\n    screenOverlays: boolean;\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     */\n    suppressInfoWindows: boolean;\n    /**\n     * The URL of the KML document to display.\n     */\n    url: string;\n    /**\n     * The z-index of the layer.\n     */\n    zIndex: number | null;\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    layerClick: EventEmitter<google.maps.KmlMouseEvent>;\n    /**\n     * This event is fired when the KML layers default viewport has changed.\n     */\n    defaultViewportChange: EventEmitter<void>;\n    /**\n     * This event is fired when the KML layer has finished loading.\n     * At this point it is safe to read the status property to determine if the layer loaded\n     * successfully.\n     */\n    statusChange: EventEmitter<void>;\n    constructor(_manager: KmlLayerManager);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private _updatePolygonOptions;\n    private _addEventListeners;\n    /** @internal */\n    id(): string;\n    /** @internal */\n    toString(): string;\n    /** @internal */\n    ngOnDestroy(): void;\n}\n"]}